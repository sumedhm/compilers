
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xae\xb1\xfae\xc7O\x9f\xd4\x98@\xae9yR\xb0\x03'
    
_lr_action_items = {'RIGHT_OP':([32,34,37,39,40,44,48,50,51,53,55,58,60,72,87,91,108,109,129,134,135,136,137,141,142,143,144,145,148,151,152,159,160,163,164,],[-86,-69,-67,-89,-91,-63,-60,-57,-84,-85,105,-88,-90,-67,-70,-73,-72,-71,-93,105,105,105,105,-65,-64,-66,-61,-62,-87,-58,-59,-92,-94,-74,-68,]),'NOTEQUALS':([32,34,37,39,40,42,44,48,50,51,53,55,56,58,60,72,87,91,108,109,129,132,134,135,136,137,141,142,143,144,145,148,151,152,153,154,159,160,163,164,],[-86,-69,-67,-89,-91,-49,-63,-60,-57,-84,-85,-52,106,-88,-90,-67,-70,-73,-72,-71,-93,106,-55,-54,-53,-56,-65,-64,-66,-61,-62,-87,-58,-59,-51,-50,-92,-94,-74,-68,]),'SHORT':([0,1,2,3,4,5,6,7,8,9,12,13,15,31,32,33,34,36,37,38,39,40,42,44,45,46,48,50,51,52,53,54,55,56,58,60,62,75,87,91,92,98,108,109,127,129,132,133,134,135,136,137,139,141,142,143,144,145,148,150,151,152,153,154,159,160,163,164,169,],[9,9,-24,-29,-23,-28,-27,-25,-30,-26,-32,-31,-34,-33,-86,-43,-69,-45,-67,-41,-89,-91,-49,-63,-37,-35,-60,-57,-84,9,-85,-39,-52,-47,-88,-90,-36,9,-70,-73,9,9,-72,-71,-46,-93,-48,-44,-55,-54,-53,-56,-40,-65,-64,-66,-61,-62,-87,-42,-58,-59,-51,-50,-92,-94,-74,-68,-38,]),'EQUALS_OP':([32,34,37,39,40,42,44,48,50,51,53,55,56,58,60,72,87,91,108,109,129,132,134,135,136,137,141,142,143,144,145,148,151,152,153,154,159,160,163,164,],[-86,-69,-67,-89,-91,-49,-63,-60,-57,-84,-85,-52,107,-88,-90,-67,-70,-73,-72,-71,-93,107,-55,-54,-53,-56,-65,-64,-66,-61,-62,-87,-58,-59,-51,-50,-92,-94,-74,-68,]),'VOID':([0,1,2,3,4,5,6,7,8,9,12,13,15,31,32,33,34,36,37,38,39,40,42,44,45,46,48,50,51,52,53,54,55,56,58,60,62,75,87,91,92,98,108,109,127,129,132,133,134,135,136,137,139,141,142,143,144,145,148,150,151,152,153,154,159,160,163,164,169,],[4,4,-24,-29,-23,-28,-27,-25,-30,-26,-32,-31,-34,-33,-86,-43,-69,-45,-67,-41,-89,-91,-49,-63,-37,-35,-60,-57,-84,4,-85,-39,-52,-47,-88,-90,-36,4,-70,-73,4,4,-72,-71,-46,-93,-48,-44,-55,-54,-53,-56,-40,-65,-64,-66,-61,-62,-87,-42,-58,-59,-51,-50,-92,-94,-74,-68,-38,]),'CHAR':([0,1,2,3,4,5,6,7,8,9,12,13,15,31,32,33,34,36,37,38,39,40,42,44,45,46,48,50,51,52,53,54,55,56,58,60,62,75,87,91,92,98,108,109,127,129,132,133,134,135,136,137,139,141,142,143,144,145,148,150,151,152,153,154,159,160,163,164,169,],[7,7,-24,-29,-23,-28,-27,-25,-30,-26,-32,-31,-34,-33,-86,-43,-69,-45,-67,-41,-89,-91,-49,-63,-37,-35,-60,-57,-84,7,-85,-39,-52,-47,-88,-90,-36,7,-70,-73,7,7,-72,-71,-46,-93,-48,-44,-55,-54,-53,-56,-40,-65,-64,-66,-61,-62,-87,-42,-58,-59,-51,-50,-92,-94,-74,-68,-38,]),'LEFT_OP':([32,34,37,39,40,44,48,50,51,53,55,58,60,72,87,91,108,109,129,134,135,136,137,141,142,143,144,145,148,151,152,159,160,163,164,],[-86,-69,-67,-89,-91,-63,-60,-57,-84,-85,104,-88,-90,-67,-70,-73,-72,-71,-93,104,104,104,104,-65,-64,-66,-61,-62,-87,-58,-59,-92,-94,-74,-68,]),'DIV_ASSIGN':([32,34,37,39,40,51,53,58,60,72,87,91,108,109,129,148,159,160,163,164,],[-86,-69,-67,-89,-91,-84,-85,-88,-90,120,-70,-73,-72,-71,-93,-87,-92,-94,-74,-68,]),'SEMI_COLON':([1,2,3,4,5,6,7,8,9,10,12,13,14,15,17,18,19,20,21,31,32,33,34,36,37,38,39,40,42,44,45,46,48,50,51,53,54,55,56,58,60,62,65,67,68,71,72,73,74,77,87,91,108,109,110,111,127,129,132,133,134,135,136,137,139,141,142,143,144,145,148,150,151,152,153,154,156,158,159,160,163,164,167,169,],[-3,-24,-29,-23,-28,-27,-25,-30,-26,22,-32,-31,-4,-34,-14,-5,28,-15,-7,-33,-86,-43,-69,-45,-67,-41,-89,-91,-49,-63,-37,-35,-60,-57,-84,-85,-39,-52,-47,-88,-90,-36,-16,-18,-20,-6,-67,-8,-9,-102,-70,-73,-72,-71,-17,-19,-46,-93,-48,-44,-55,-54,-53,-56,-40,-65,-64,-66,-61,-62,-87,-42,-58,-59,-51,-50,-103,-10,-92,-94,-74,-68,-11,-38,]),'SIZEOF':([24,26,30,35,41,43,47,49,52,57,59,61,63,64,75,76,78,79,80,81,82,83,84,85,86,88,89,90,92,93,94,95,96,97,103,104,105,106,107,113,114,115,116,117,118,119,120,121,122,123,124,147,149,157,161,162,],[47,47,47,-78,-79,47,47,-75,47,-76,-77,47,-80,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-109,-107,-113,-114,-104,-112,-105,-106,-110,-108,-111,47,47,47,47,47,47,]),'CONDOP':([32,33,34,36,37,38,39,40,42,44,45,48,50,51,53,54,55,56,58,60,72,87,91,108,109,127,129,132,133,134,135,136,137,139,141,142,143,144,145,148,150,151,152,153,154,159,160,163,164,],[-86,-43,-69,-45,-67,-41,-89,-91,-49,-63,89,-60,-57,-84,-85,-39,-52,-47,-88,-90,-67,-70,-73,-72,-71,-46,-93,-48,-44,-55,-54,-53,-56,-40,-65,-64,-66,-61,-62,-87,-42,-58,-59,-51,-50,-92,-94,-74,-68,]),'MINUS':([24,26,30,32,34,35,37,39,40,41,43,44,47,48,49,50,51,52,53,57,58,59,60,61,63,64,72,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,103,104,105,106,107,108,109,113,114,115,116,117,118,119,120,121,122,123,124,129,141,142,143,144,145,147,148,149,151,152,157,159,160,161,162,163,164,],[35,35,35,-86,-69,-78,-67,-89,-91,-79,35,-63,35,-60,-75,97,-84,35,-85,-76,-88,-77,-90,35,-80,35,-67,35,35,35,35,35,35,35,35,35,35,35,-70,35,35,35,-73,35,35,35,35,35,35,35,35,35,35,35,-72,-71,-109,-107,-113,-114,-104,-112,-105,-106,-110,-108,-111,35,-93,-65,-64,-66,-61,-62,35,-87,35,97,97,35,-92,-94,35,35,-74,-68,]),'MULT':([24,26,30,32,34,35,37,39,40,41,43,44,47,48,49,51,52,53,57,58,59,60,61,63,64,72,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,103,104,105,106,107,108,109,113,114,115,116,117,118,119,120,121,122,123,124,129,141,142,143,144,145,147,148,149,157,159,160,161,162,163,164,],[57,57,57,-86,-69,-78,-67,-89,-91,-79,57,-63,57,94,-75,-84,57,-85,-76,-88,-77,-90,57,-80,57,-67,57,57,57,57,57,57,57,57,57,57,57,-70,57,57,57,-73,57,57,57,57,57,57,57,57,57,57,57,-72,-71,-109,-107,-113,-114,-104,-112,-105,-106,-110,-108,-111,57,-93,-65,-64,-66,94,94,57,-87,57,57,-92,-94,57,57,-74,-68,]),'RPAREN':([2,3,4,5,6,7,8,9,12,13,15,17,20,25,27,31,32,33,34,36,37,38,39,40,42,44,45,46,48,50,51,53,54,55,56,58,60,62,65,67,68,69,70,72,77,80,87,91,98,99,100,101,102,108,109,110,111,127,129,130,131,132,133,134,135,136,137,139,140,141,142,143,144,145,146,148,150,151,152,153,154,155,156,159,160,163,164,165,168,169,],[-24,-29,-23,-28,-27,-25,-30,-26,-32,-31,-34,-14,-15,65,68,-33,-86,-43,-69,-45,-67,-41,-89,-91,-49,-63,-37,-35,-60,-57,-84,-85,-39,-52,-47,-88,-90,-36,-16,-18,-20,-21,111,-67,-102,129,-70,-73,-83,147,-100,-81,148,-72,-71,-17,-19,-46,-93,-98,160,-48,-44,-55,-54,-53,-56,-40,163,-65,-64,-66,-61,-62,-82,-87,-42,-58,-59,-51,-50,-22,-103,-92,-94,-74,-68,-101,-99,-38,]),'RIGHT_ASSIGN':([32,34,37,39,40,51,53,58,60,72,87,91,108,109,129,148,159,160,163,164,],[-86,-69,-67,-89,-91,-84,-85,-88,-90,123,-70,-73,-72,-71,-93,-87,-92,-94,-74,-68,]),'G_OP':([32,34,37,39,40,42,44,48,50,51,53,55,58,60,72,87,91,108,109,129,134,135,136,137,141,142,143,144,145,148,151,152,153,154,159,160,163,164,],[-86,-69,-67,-89,-91,84,-63,-60,-57,-84,-85,-52,-88,-90,-67,-70,-73,-72,-71,-93,-55,-54,-53,-56,-65,-64,-66,-61,-62,-87,-58,-59,84,84,-92,-94,-74,-68,]),'EXP_REAL':([24,26,30,35,41,43,47,49,52,57,59,61,63,64,75,76,78,79,80,81,82,83,84,85,86,88,89,90,92,93,94,95,96,97,103,104,105,106,107,113,114,115,116,117,118,119,120,121,122,123,124,147,149,157,161,162,],[39,39,39,-78,-79,39,39,-75,39,-76,-77,39,-80,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-109,-107,-113,-114,-104,-112,-105,-106,-110,-108,-111,39,39,39,39,39,39,]),'DEC_INT':([24,26,30,35,41,43,47,49,52,57,59,61,63,64,75,76,78,79,80,81,82,83,84,85,86,88,89,90,92,93,94,95,96,97,103,104,105,106,107,113,114,115,116,117,118,119,120,121,122,123,124,147,149,157,161,162,],[40,40,40,-78,-79,40,40,-75,40,-76,-77,40,-80,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-109,-107,-113,-114,-104,-112,-105,-106,-110,-108,-111,40,40,40,40,40,40,]),'LONG':([0,1,2,3,4,5,6,7,8,9,12,13,15,31,32,33,34,36,37,38,39,40,42,44,45,46,48,50,51,52,53,54,55,56,58,60,62,75,87,91,92,98,108,109,127,129,132,133,134,135,136,137,139,141,142,143,144,145,148,150,151,152,153,154,159,160,163,164,169,],[6,6,-24,-29,-23,-28,-27,-25,-30,-26,-32,-31,-34,-33,-86,-43,-69,-45,-67,-41,-89,-91,-49,-63,-37,-35,-60,-57,-84,6,-85,-39,-52,-47,-88,-90,-36,6,-70,-73,6,6,-72,-71,-46,-93,-48,-44,-55,-54,-53,-56,-40,-65,-64,-66,-61,-62,-87,-42,-58,-59,-51,-50,-92,-94,-74,-68,-38,]),'LBIG':([17,20,32,34,39,40,51,53,58,60,65,67,68,110,111,129,148,159,160,],[26,-15,-86,79,-89,-91,-84,-85,-88,-90,-16,-18,-20,-17,-19,-93,-87,-92,-94,]),'TILDA':([24,26,30,35,41,43,47,49,52,57,59,61,63,64,75,76,78,79,80,81,82,83,84,85,86,88,89,90,92,93,94,95,96,97,103,104,105,106,107,113,114,115,116,117,118,119,120,121,122,123,124,147,149,157,161,162,],[41,41,41,-78,-79,41,41,-75,41,-76,-77,41,-80,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-109,-107,-113,-114,-104,-112,-105,-106,-110,-108,-111,41,41,41,41,41,41,]),'COMMA':([12,13,15,17,18,19,20,21,31,32,33,34,36,37,38,39,40,42,44,45,46,48,50,51,53,54,55,56,58,60,62,65,67,68,69,70,71,72,73,74,77,87,91,100,102,108,109,110,111,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,141,142,143,144,145,148,150,151,152,153,154,155,156,158,159,160,163,164,165,166,167,168,169,],[-32,23,-34,-14,-5,29,-15,-7,-33,-86,-43,-69,-45,-67,-41,-89,-91,-49,-63,-37,-35,-60,-57,-84,-85,-39,-52,-47,-88,-90,-36,-16,-18,-20,-21,112,-6,-67,-8,-9,-102,-70,-73,-100,149,-72,-71,-17,-19,-12,157,-46,149,-93,-98,161,-48,-44,-55,-54,-53,-56,149,-40,-65,-64,-66,-61,-62,-87,-42,-58,-59,-51,-50,-22,-103,-10,-92,-94,-74,-68,-101,-13,-11,-99,-38,]),'INCREMENT':([24,26,30,35,41,43,47,49,52,57,59,61,63,64,75,76,78,79,80,81,82,83,84,85,86,88,89,90,92,93,94,95,96,97,103,104,105,106,107,113,114,115,116,117,118,119,120,121,122,123,124,147,149,157,161,162,],[43,43,43,-78,-79,43,43,-75,43,-76,-77,43,-80,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-109,-107,-113,-114,-104,-112,-105,-106,-110,-108,-111,43,43,43,43,43,43,]),'COLON':([32,33,34,36,37,38,39,40,42,44,45,48,50,51,53,54,55,56,58,60,72,77,87,91,100,108,109,127,129,132,133,134,135,136,137,138,139,141,142,143,144,145,148,150,151,152,153,154,156,159,160,163,164,165,169,],[-86,-43,-69,-45,-67,-41,-89,-91,-49,-63,-37,-60,-57,-84,-85,-39,-52,-47,-88,-90,-67,-102,-70,-73,-100,-72,-71,-46,-93,-48,-44,-55,-54,-53,-56,162,-40,-65,-64,-66,-61,-62,-87,-42,-58,-59,-51,-50,-103,-92,-94,-74,-68,-101,-38,]),'ADD_ASSIGN':([32,34,37,39,40,51,53,58,60,72,87,91,108,109,129,148,159,160,163,164,],[-86,-69,-67,-89,-91,-84,-85,-88,-90,122,-70,-73,-72,-71,-93,-87,-92,-94,-74,-68,]),'MUL_ASSIGN':([32,34,37,39,40,51,53,58,60,72,87,91,108,109,129,148,159,160,163,164,],[-86,-69,-67,-89,-91,-84,-85,-88,-90,119,-70,-73,-72,-71,-93,-87,-92,-94,-74,-68,]),'$end':([11,22,28,],[0,-1,-2,]),'AND':([32,33,34,36,37,39,40,42,44,48,50,51,53,55,56,58,60,72,87,91,108,109,127,129,132,133,134,135,136,137,141,142,143,144,145,148,151,152,153,154,159,160,163,164,],[-86,78,-69,-45,-67,-89,-91,-49,-63,-60,-57,-84,-85,-52,-47,-88,-90,-67,-70,-73,-72,-71,-46,-93,-48,78,-55,-54,-53,-56,-65,-64,-66,-61,-62,-87,-58,-59,-51,-50,-92,-94,-74,-68,]),'RBRACE':([32,33,34,36,37,38,39,40,42,44,45,48,50,51,53,54,55,56,58,60,72,74,77,87,91,108,109,125,126,127,129,132,133,134,135,136,137,139,141,142,143,144,145,148,150,151,152,153,154,156,157,158,159,160,163,164,166,167,169,],[-86,-43,-69,-45,-67,-41,-89,-91,-49,-63,-37,-60,-57,-84,-85,-39,-52,-47,-88,-90,-67,-9,-102,-70,-73,-72,-71,-12,158,-46,-93,-48,-44,-55,-54,-53,-56,-40,-65,-64,-66,-61,-62,-87,-42,-58,-59,-51,-50,-103,167,-10,-92,-94,-74,-68,-13,-11,-38,]),'AND_ASSIGN':([32,34,37,39,40,51,53,58,60,72,87,91,108,109,129,148,159,160,163,164,],[-86,-69,-67,-89,-91,-84,-85,-88,-90,118,-70,-73,-72,-71,-93,-87,-92,-94,-74,-68,]),'EQUALS':([15,17,20,21,32,34,37,39,40,51,53,58,60,65,67,68,72,87,91,108,109,110,111,129,148,159,160,163,164,],[24,-14,-15,30,-86,-69,-67,-89,-91,-84,-85,-88,-90,-16,-18,-20,117,-70,-73,-72,-71,-17,-19,-93,-87,-92,-94,-74,-68,]),'AND_OP':([24,26,30,32,33,34,35,36,37,38,39,40,41,42,43,44,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,63,64,72,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,103,104,105,106,107,108,109,113,114,115,116,117,118,119,120,121,122,123,124,127,129,132,133,134,135,136,137,139,141,142,143,144,145,147,148,149,150,151,152,153,154,157,159,160,161,162,163,164,],[49,49,49,-86,-43,-69,-78,81,-67,-41,-89,-91,-79,-49,49,-63,49,-60,-75,-57,-84,49,-85,103,-52,-47,-76,-88,-77,-90,49,-80,49,-67,49,49,49,49,49,49,49,49,49,49,49,-70,49,49,49,-73,49,49,49,49,49,49,49,49,49,49,49,-72,-71,-109,-107,-113,-114,-104,-112,-105,-106,-110,-108,-111,49,81,-93,-48,-44,-55,-54,-53,-56,103,-65,-64,-66,-61,-62,49,-87,49,-42,-58,-59,-51,-50,49,-92,-94,49,49,-74,-68,]),'ADD':([24,26,30,32,34,35,37,39,40,41,43,44,47,48,49,50,51,52,53,57,58,59,60,61,63,64,72,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,103,104,105,106,107,108,109,113,114,115,116,117,118,119,120,121,122,123,124,129,141,142,143,144,145,147,148,149,151,152,157,159,160,161,162,163,164,],[59,59,59,-86,-69,-78,-67,-89,-91,-79,59,-63,59,-60,-75,96,-84,59,-85,-76,-88,-77,-90,59,-80,59,-67,59,59,59,59,59,59,59,59,59,59,59,-70,59,59,59,-73,59,59,59,59,59,59,59,59,59,59,59,-72,-71,-109,-107,-113,-114,-104,-112,-105,-106,-110,-108,-111,59,-93,-65,-64,-66,-61,-62,59,-87,59,96,96,59,-92,-94,59,59,-74,-68,]),'GE_OP':([32,34,37,39,40,42,44,48,50,51,53,55,58,60,72,87,91,108,109,129,134,135,136,137,141,142,143,144,145,148,151,152,153,154,159,160,163,164,],[-86,-69,-67,-89,-91,86,-63,-60,-57,-84,-85,-52,-88,-90,-67,-70,-73,-72,-71,-93,-55,-54,-53,-56,-65,-64,-66,-61,-62,-87,-58,-59,86,86,-92,-94,-74,-68,]),'LPAREN':([1,2,3,4,5,6,7,8,9,10,12,13,14,15,16,17,20,24,26,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,103,104,105,106,107,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,124,127,129,132,133,134,135,136,137,139,141,142,143,144,145,147,148,149,150,151,152,153,154,157,159,160,161,162,163,164,169,],[-3,-24,-29,-23,-28,-27,-25,-30,-26,16,-32,-31,-4,-34,16,27,-15,52,52,16,75,-33,-86,-43,80,-78,-45,-67,-41,-89,-91,-79,-49,88,-63,-37,-35,92,-60,-75,-57,-84,75,-85,-39,-52,-47,-76,-88,-77,-90,52,-36,-80,88,-16,-18,-20,75,75,52,75,75,52,52,52,52,52,52,-70,75,75,52,-73,75,52,52,52,52,52,52,52,52,52,52,-72,-71,-17,-19,-109,-107,-113,-114,-104,-112,-105,-106,-110,-108,-111,75,-46,-93,-48,-44,-55,-54,-53,-56,-40,-65,-64,-66,-61,-62,52,-87,75,-42,-58,-59,-51,-50,75,-92,-94,75,52,-74,-68,-38,]),'VARIABLE':([1,2,3,4,5,6,7,8,9,10,12,13,14,15,16,23,24,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,103,104,105,106,107,108,109,112,113,114,115,116,117,118,119,120,121,122,123,124,127,129,132,133,134,135,136,137,139,141,142,143,144,145,147,148,149,150,151,152,153,154,157,159,160,161,162,163,164,169,],[15,-24,-29,-23,-28,-27,-25,-30,-26,20,-32,-31,-4,-34,20,15,53,53,69,20,53,-33,-86,-43,-69,-78,-45,-67,-41,-89,-91,-79,-49,53,-63,-37,-35,53,-60,-75,-57,-84,53,-85,-39,-52,-47,-76,-88,-77,-90,53,-36,-80,53,53,53,53,53,53,53,53,53,53,53,53,-70,53,53,53,-73,53,53,53,53,53,53,15,53,53,53,53,53,-72,-71,155,-109,-107,-113,-114,-104,-112,-105,-106,-110,-108,-111,53,-46,-93,-48,-44,-55,-54,-53,-56,-40,-65,-64,-66,-61,-62,53,-87,53,-42,-58,-59,-51,-50,53,-92,-94,53,53,-74,-68,-38,]),'LE_OP':([32,34,37,39,40,42,44,48,50,51,53,55,58,60,72,87,91,108,109,129,134,135,136,137,141,142,143,144,145,148,151,152,153,154,159,160,163,164,],[-86,-69,-67,-89,-91,83,-63,-60,-57,-84,-85,-52,-88,-90,-67,-70,-73,-72,-71,-93,-55,-54,-53,-56,-65,-64,-66,-61,-62,-87,-58,-59,83,83,-92,-94,-74,-68,]),'LEFT_ASSIGN':([32,34,37,39,40,51,53,58,60,72,87,91,108,109,129,148,159,160,163,164,],[-86,-69,-67,-89,-91,-84,-85,-88,-90,121,-70,-73,-72,-71,-93,-87,-92,-94,-74,-68,]),'OR_OP':([32,33,34,36,37,38,39,40,42,44,45,48,50,51,53,54,55,56,58,60,72,87,91,108,109,127,129,132,133,134,135,136,137,139,141,142,143,144,145,148,150,151,152,153,154,159,160,163,164,],[-86,-43,-69,-45,-67,-41,-89,-91,-49,-63,90,-60,-57,-84,-85,-39,-52,-47,-88,-90,-67,-70,-73,-72,-71,-46,-93,-48,-44,-55,-54,-53,-56,-40,-65,-64,-66,-61,-62,-87,-42,-58,-59,-51,-50,-92,-94,-74,-68,]),'SUB_ASSIGN':([32,34,37,39,40,51,53,58,60,72,87,91,108,109,129,148,159,160,163,164,],[-86,-69,-67,-89,-91,-84,-85,-88,-90,113,-70,-73,-72,-71,-93,-87,-92,-94,-74,-68,]),'MOD_ASSIGN':([32,34,37,39,40,51,53,58,60,72,87,91,108,109,129,148,159,160,163,164,],[-86,-69,-67,-89,-91,-84,-85,-88,-90,114,-70,-73,-72,-71,-93,-87,-92,-94,-74,-68,]),'LBRACE':([30,76,157,],[76,76,76,]),'XOR_ASSIGN':([32,34,37,39,40,51,53,58,60,72,87,91,108,109,129,148,159,160,163,164,],[-86,-69,-67,-89,-91,-84,-85,-88,-90,115,-70,-73,-72,-71,-93,-87,-92,-94,-74,-68,]),'INT':([0,1,2,3,4,5,6,7,8,9,12,13,15,31,32,33,34,36,37,38,39,40,42,44,45,46,48,50,51,52,53,54,55,56,58,60,62,75,87,91,92,98,108,109,127,129,132,133,134,135,136,137,139,141,142,143,144,145,148,150,151,152,153,154,159,160,163,164,169,],[2,2,-24,-29,-23,-28,-27,-25,-30,-26,-32,-31,-34,-33,-86,-43,-69,-45,-67,-41,-89,-91,-49,-63,-37,-35,-60,-57,-84,2,-85,-39,-52,-47,-88,-90,-36,2,-70,-73,2,2,-72,-71,-46,-93,-48,-44,-55,-54,-53,-56,-40,-65,-64,-66,-61,-62,-87,-42,-58,-59,-51,-50,-92,-94,-74,-68,-38,]),'DOUBLE':([0,1,2,3,4,5,6,7,8,9,12,13,15,31,32,33,34,36,37,38,39,40,42,44,45,46,48,50,51,52,53,54,55,56,58,60,62,75,87,91,92,98,108,109,127,129,132,133,134,135,136,137,139,141,142,143,144,145,148,150,151,152,153,154,159,160,163,164,169,],[3,3,-24,-29,-23,-28,-27,-25,-30,-26,-32,-31,-34,-33,-86,-43,-69,-45,-67,-41,-89,-91,-49,-63,-37,-35,-60,-57,-84,3,-85,-39,-52,-47,-88,-90,-36,3,-70,-73,3,3,-72,-71,-46,-93,-48,-44,-55,-54,-53,-56,-40,-65,-64,-66,-61,-62,-87,-42,-58,-59,-51,-50,-92,-94,-74,-68,-38,]),'HEX_INT':([24,26,30,35,41,43,47,49,52,57,59,61,63,64,75,76,78,79,80,81,82,83,84,85,86,88,89,90,92,93,94,95,96,97,103,104,105,106,107,113,114,115,116,117,118,119,120,121,122,123,124,147,149,157,161,162,],[58,58,58,-78,-79,58,58,-75,58,-76,-77,58,-80,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-109,-107,-113,-114,-104,-112,-105,-106,-110,-108,-111,58,58,58,58,58,58,]),'FLOAT':([0,1,2,3,4,5,6,7,8,9,12,13,15,31,32,33,34,36,37,38,39,40,42,44,45,46,48,50,51,52,53,54,55,56,58,60,62,75,87,91,92,98,108,109,127,129,132,133,134,135,136,137,139,141,142,143,144,145,148,150,151,152,153,154,159,160,163,164,169,],[5,5,-24,-29,-23,-28,-27,-25,-30,-26,-32,-31,-34,-33,-86,-43,-69,-45,-67,-41,-89,-91,-49,-63,-37,-35,-60,-57,-84,5,-85,-39,-52,-47,-88,-90,-36,5,-70,-73,5,5,-72,-71,-46,-93,-48,-44,-55,-54,-53,-56,-40,-65,-64,-66,-61,-62,-87,-42,-58,-59,-51,-50,-92,-94,-74,-68,-38,]),'OR_ASSIGN':([32,34,37,39,40,51,53,58,60,72,87,91,108,109,129,148,159,160,163,164,],[-86,-69,-67,-89,-91,-84,-85,-88,-90,116,-70,-73,-72,-71,-93,-87,-92,-94,-74,-68,]),'L_OP':([32,34,37,39,40,42,44,48,50,51,53,55,58,60,72,87,91,108,109,129,134,135,136,137,141,142,143,144,145,148,151,152,153,154,159,160,163,164,],[-86,-69,-67,-89,-91,85,-63,-60,-57,-84,-85,-52,-88,-90,-67,-70,-73,-72,-71,-93,-55,-54,-53,-56,-65,-64,-66,-61,-62,-87,-58,-59,85,85,-92,-94,-74,-68,]),'DOT_REAL':([24,26,30,35,41,43,47,49,52,57,59,61,63,64,75,76,78,79,80,81,82,83,84,85,86,88,89,90,92,93,94,95,96,97,103,104,105,106,107,113,114,115,116,117,118,119,120,121,122,123,124,147,149,157,161,162,],[60,60,60,-78,-79,60,60,-75,60,-76,-77,60,-80,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-109,-107,-113,-114,-104,-112,-105,-106,-110,-108,-111,60,60,60,60,60,60,]),'NOT':([24,26,30,35,41,43,47,49,52,57,59,61,63,64,75,76,78,79,80,81,82,83,84,85,86,88,89,90,92,93,94,95,96,97,103,104,105,106,107,113,114,115,116,117,118,119,120,121,122,123,124,147,149,157,161,162,],[63,63,63,-78,-79,63,63,-75,63,-76,-77,63,-80,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,-109,-107,-113,-114,-104,-112,-105,-106,-110,-108,-111,63,63,63,63,63,63,]),'DECREMENT':([24,26,30,35,41,43,47,49,52,57,59,61,63,64,75,76,78,79,80,81,82,83,84,85,86,88,89,90,92,93,94,95,96,97,103,104,105,106,107,113,114,115,116,117,118,119,120,121,122,123,124,147,149,157,161,162,],[64,64,64,-78,-79,64,64,-75,64,-76,-77,64,-80,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,-109,-107,-113,-114,-104,-112,-105,-106,-110,-108,-111,64,64,64,64,64,64,]),'RBIG':([26,32,33,34,36,37,38,39,40,42,44,45,48,50,51,53,54,55,56,58,60,62,66,72,77,87,91,100,108,109,127,128,129,132,133,134,135,136,137,139,141,142,143,144,145,148,150,151,152,153,154,156,159,160,163,164,165,169,],[67,-86,-43,-69,-45,-67,-41,-89,-91,-49,-63,-37,-60,-57,-84,-85,-39,-52,-47,-88,-90,-36,110,-67,-102,-70,-73,-100,-72,-71,-46,159,-93,-48,-44,-55,-54,-53,-56,-40,-65,-64,-66,-61,-62,-87,-42,-58,-59,-51,-50,-103,-92,-94,-74,-68,-101,-38,]),'OR':([32,33,34,36,37,38,39,40,42,44,48,50,51,53,55,56,58,60,72,87,91,108,109,127,129,132,133,134,135,136,137,141,142,143,144,145,148,150,151,152,153,154,159,160,163,164,],[-86,-43,-69,-45,-67,82,-89,-91,-49,-63,-60,-57,-84,-85,-52,-47,-88,-90,-67,-70,-73,-72,-71,-46,-93,-48,-44,-55,-54,-53,-56,-65,-64,-66,-61,-62,-87,82,-58,-59,-51,-50,-92,-94,-74,-68,]),'DIV':([32,34,37,39,40,44,48,51,53,58,60,72,87,91,108,109,129,141,142,143,144,145,148,159,160,163,164,],[-86,-69,-67,-89,-91,-63,93,-84,-85,-88,-90,-67,-70,-73,-72,-71,-93,-65,-64,-66,93,93,-87,-92,-94,-74,-68,]),'MOD':([32,34,37,39,40,44,48,51,53,58,60,72,87,91,108,109,129,141,142,143,144,145,148,159,160,163,164,],[-86,-69,-67,-89,-91,-63,95,-84,-85,-88,-90,-67,-70,-73,-72,-71,-93,-65,-64,-66,95,95,-87,-92,-94,-74,-68,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'constant':([24,26,30,43,47,52,61,64,75,76,78,79,80,81,82,83,84,85,86,88,89,90,92,93,94,95,96,97,103,104,105,106,107,124,147,149,157,161,162,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'unary_expression':([24,26,30,43,47,52,61,64,75,76,78,79,80,81,82,83,84,85,86,88,89,90,92,93,94,95,96,97,103,104,105,106,107,124,147,149,157,161,162,],[37,37,72,87,91,72,37,109,72,72,37,72,72,37,37,37,37,37,37,72,72,37,72,37,37,37,37,37,37,37,37,37,37,72,37,72,72,72,37,]),'exclusive_or_expression':([24,26,30,52,75,76,79,80,82,88,89,90,92,103,124,149,157,161,162,],[33,33,33,33,33,33,33,33,133,33,33,33,33,33,33,33,33,33,33,]),'initializer':([30,76,157,],[73,125,166,]),'init_declarator_list':([10,],[19,]),'and_expression':([24,26,30,52,75,76,78,79,80,82,88,89,90,92,103,124,149,157,161,162,],[36,36,36,36,36,36,127,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'type_specifier':([0,1,52,75,92,98,],[1,1,98,98,98,98,]),'inclusive_or_expression':([24,26,30,52,75,76,79,80,88,89,90,92,103,124,149,157,161,162,],[38,38,38,38,38,38,38,38,38,38,38,38,150,38,38,38,38,38,]),'type_name':([52,75,92,],[99,99,140,]),'postfix_expression':([24,26,30,43,47,52,61,64,75,76,78,79,80,81,82,83,84,85,86,88,89,90,92,93,94,95,96,97,103,104,105,106,107,124,147,149,157,161,162,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'relational_expression':([24,26,30,52,75,76,78,79,80,81,82,88,89,90,92,103,106,107,124,149,157,161,162,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,153,154,42,42,42,42,42,]),'cast_expression':([24,26,30,52,61,75,76,78,79,80,81,82,83,84,85,86,88,89,90,92,93,94,95,96,97,103,104,105,106,107,124,147,149,157,161,162,],[44,44,44,44,108,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,141,142,143,44,44,44,44,44,44,44,44,164,44,44,44,44,]),'init_declarator':([10,29,],[18,71,]),'direct_declarator':([10,16,29,],[17,17,17,]),'constant_expression':([24,26,],[46,66,]),'assignment_operator':([72,],[124,]),'enumerator':([1,23,98,],[12,31,12,]),'assignment_expression':([30,52,75,76,79,80,88,89,92,124,149,157,161,],[74,100,100,74,100,130,100,100,100,156,165,74,168,]),'multiplicative_expression':([24,26,30,52,75,76,78,79,80,81,82,83,84,85,86,88,89,90,92,96,97,103,104,105,106,107,124,149,157,161,162,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,144,145,48,48,48,48,48,48,48,48,48,48,]),'conditional_expression':([24,26,30,52,75,76,79,80,88,89,92,124,149,157,161,162,],[62,62,77,77,77,77,77,77,77,77,77,77,77,77,77,169,]),'argument_expression_list':([80,],[131,]),'enum_list':([1,98,],[13,13,]),'additive_expression':([24,26,30,52,75,76,78,79,80,81,82,83,84,85,86,88,89,90,92,103,104,105,106,107,124,149,157,161,162,],[50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,151,152,50,50,50,50,50,50,50,]),'primary_expression':([24,26,30,43,47,52,61,64,75,76,78,79,80,81,82,83,84,85,86,88,89,90,92,93,94,95,96,97,103,104,105,106,107,124,147,149,157,161,162,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'declaration_specifiers':([0,1,],[10,14,]),'declaration':([0,],[11,]),'logical_and_expression':([24,26,30,52,75,76,79,80,88,89,90,92,124,149,157,161,162,],[54,54,54,54,54,54,54,54,54,54,139,54,54,54,54,54,54,]),'variable_list':([27,],[70,]),'shift_expression':([24,26,30,52,75,76,78,79,80,81,82,83,84,85,86,88,89,90,92,103,106,107,124,149,157,161,162,],[55,55,55,55,55,55,55,55,55,55,55,134,135,136,137,55,55,55,55,55,55,55,55,55,55,55,55,]),'equality_expression':([24,26,30,52,75,76,78,79,80,81,82,88,89,90,92,103,124,149,157,161,162,],[56,56,56,56,56,56,56,56,56,132,56,56,56,56,56,56,56,56,56,56,56,]),'enum_specifier':([0,1,52,75,92,98,],[8,8,8,8,8,8,]),'logical_or_expression':([24,26,30,52,75,76,79,80,88,89,92,124,149,157,161,162,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'specifier_qualifier_list':([52,75,92,98,],[101,101,101,146,]),'unary_operator':([24,26,30,43,47,52,61,64,75,76,78,79,80,81,82,83,84,85,86,88,89,90,92,93,94,95,96,97,103,104,105,106,107,124,147,149,157,161,162,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'initializer_list':([76,],[126,]),'declarator':([10,16,29,],[21,25,21,]),'expression':([52,75,79,88,89,92,],[102,102,128,102,138,102,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> declaration","S'",1,None,None,None),
  ('declaration -> declaration_specifiers SEMI_COLON','declaration',2,'p_declaration_1','parser.py',10),
  ('declaration -> declaration_specifiers init_declarator_list SEMI_COLON','declaration',3,'p_declaration_2','parser.py',14),
  ('declaration_specifiers -> type_specifier','declaration_specifiers',1,'p_declaration_specifiers_1','parser.py',18),
  ('declaration_specifiers -> type_specifier declaration_specifiers','declaration_specifiers',2,'p_declaration_specifiers_2','parser.py',22),
  ('init_declarator_list -> init_declarator','init_declarator_list',1,'p_init_declarator_list_1','parser.py',26),
  ('init_declarator_list -> init_declarator_list COMMA init_declarator','init_declarator_list',3,'p_init_declarator_list_2','parser.py',30),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator_1','parser.py',34),
  ('init_declarator -> declarator EQUALS initializer','init_declarator',3,'p_init_declarator_2','parser.py',38),
  ('initializer -> assignment_expression','initializer',1,'p_initializer_1','parser.py',42),
  ('initializer -> LBRACE initializer_list RBRACE','initializer',3,'p_initializer_2','parser.py',46),
  ('initializer -> LBRACE initializer_list COMMA RBRACE','initializer',4,'p_initializer_3','parser.py',50),
  ('initializer_list -> initializer','initializer_list',1,'p_initializer_list_1','parser.py',54),
  ('initializer_list -> initializer_list COMMA initializer','initializer_list',3,'p_initializer_list_2','parser.py',58),
  ('declarator -> direct_declarator','declarator',1,'p_declarator_1','parser.py',62),
  ('direct_declarator -> VARIABLE','direct_declarator',1,'p_direct_declarator_1','parser.py',66),
  ('direct_declarator -> LPAREN declarator RPAREN','direct_declarator',3,'p_direct_declarator_2','parser.py',70),
  ('direct_declarator -> direct_declarator LBIG constant_expression RBIG','direct_declarator',4,'p_direct_declarator_3','parser.py',74),
  ('direct_declarator -> direct_declarator LBIG RBIG','direct_declarator',3,'p_direct_declarator_4','parser.py',78),
  ('direct_declarator -> direct_declarator LPAREN variable_list RPAREN','direct_declarator',4,'p_direct_declarator_5','parser.py',82),
  ('direct_declarator -> direct_declarator LPAREN RPAREN','direct_declarator',3,'p_direct_declarator_6','parser.py',86),
  ('variable_list -> VARIABLE','variable_list',1,'p_variable_list_1','parser.py',90),
  ('variable_list -> variable_list COMMA VARIABLE','variable_list',3,'p_variable_list_2','parser.py',94),
  ('type_specifier -> VOID','type_specifier',1,'p_type_specifier_1','parser.py',98),
  ('type_specifier -> INT','type_specifier',1,'p_type_specifier_2','parser.py',102),
  ('type_specifier -> CHAR','type_specifier',1,'p_type_specifier_3','parser.py',106),
  ('type_specifier -> SHORT','type_specifier',1,'p_type_specifier_4','parser.py',110),
  ('type_specifier -> LONG','type_specifier',1,'p_type_specifier_5','parser.py',114),
  ('type_specifier -> FLOAT','type_specifier',1,'p_type_specifier_6','parser.py',118),
  ('type_specifier -> DOUBLE','type_specifier',1,'p_type_specifier_7','parser.py',122),
  ('type_specifier -> enum_specifier','type_specifier',1,'p_type_specifier_8','parser.py',126),
  ('enum_specifier -> type_specifier enum_list','enum_specifier',2,'p_enum_specifier_1','parser.py',130),
  ('enum_list -> enumerator','enum_list',1,'p_enum_list_1','parser.py',134),
  ('enum_list -> enum_list COMMA enumerator','enum_list',3,'p_enum_list_2','parser.py',138),
  ('enumerator -> VARIABLE','enumerator',1,'p_enumerator_1','parser.py',142),
  ('enumerator -> VARIABLE EQUALS constant_expression','enumerator',3,'p_enumerator_2','parser.py',146),
  ('constant_expression -> conditional_expression','constant_expression',1,'p_constant_expression','parser.py',150),
  ('conditional_expression -> logical_or_expression','conditional_expression',1,'p_conditional_expression_1','parser.py',154),
  ('conditional_expression -> logical_or_expression CONDOP expression COLON conditional_expression','conditional_expression',5,'p_conditional_expression_2','parser.py',158),
  ('logical_or_expression -> logical_and_expression','logical_or_expression',1,'p_logical_or_expression_1','parser.py',163),
  ('logical_or_expression -> logical_or_expression OR_OP logical_and_expression','logical_or_expression',3,'p_logical_or_expression_2','parser.py',167),
  ('logical_and_expression -> inclusive_or_expression','logical_and_expression',1,'p_logical_and_expression_1','parser.py',171),
  ('logical_and_expression -> logical_and_expression AND_OP inclusive_or_expression','logical_and_expression',3,'p_logical_and_expression_2','parser.py',175),
  ('inclusive_or_expression -> exclusive_or_expression','inclusive_or_expression',1,'p_inclusive_or_expression_1','parser.py',179),
  ('inclusive_or_expression -> inclusive_or_expression OR exclusive_or_expression','inclusive_or_expression',3,'p_inclusive_or_expression_2','parser.py',183),
  ('exclusive_or_expression -> and_expression','exclusive_or_expression',1,'p_exclusive_or_expression_1','parser.py',187),
  ('exclusive_or_expression -> exclusive_or_expression AND and_expression','exclusive_or_expression',3,'p_exclusive_or_expression_2','parser.py',191),
  ('and_expression -> equality_expression','and_expression',1,'p_and_expression_1','parser.py',195),
  ('and_expression -> and_expression AND_OP equality_expression','and_expression',3,'p_and_expression_2','parser.py',199),
  ('equality_expression -> relational_expression','equality_expression',1,'p_equality_expression_1','parser.py',203),
  ('equality_expression -> equality_expression EQUALS_OP relational_expression','equality_expression',3,'p_equality_expression_2','parser.py',207),
  ('equality_expression -> equality_expression NOTEQUALS relational_expression','equality_expression',3,'p_equality_expression_3','parser.py',211),
  ('relational_expression -> shift_expression','relational_expression',1,'p_relational_expression_1','parser.py',215),
  ('relational_expression -> relational_expression L_OP shift_expression','relational_expression',3,'p_relational_expression_2','parser.py',219),
  ('relational_expression -> relational_expression G_OP shift_expression','relational_expression',3,'p_relational_expression_3','parser.py',223),
  ('relational_expression -> relational_expression LE_OP shift_expression','relational_expression',3,'p_relational_expression_4','parser.py',227),
  ('relational_expression -> relational_expression GE_OP shift_expression','relational_expression',3,'p_relational_expression_5','parser.py',231),
  ('shift_expression -> additive_expression','shift_expression',1,'p_shift_expression_1','parser.py',235),
  ('shift_expression -> shift_expression LEFT_OP additive_expression','shift_expression',3,'p_shift_expression_2','parser.py',239),
  ('shift_expression -> shift_expression RIGHT_OP additive_expression','shift_expression',3,'p_shift_expression_3','parser.py',243),
  ('additive_expression -> multiplicative_expression','additive_expression',1,'p_additive_expression_1','parser.py',247),
  ('additive_expression -> additive_expression ADD multiplicative_expression','additive_expression',3,'p_additive_expression_2','parser.py',251),
  ('additive_expression -> additive_expression MINUS multiplicative_expression','additive_expression',3,'p_additive_expression_3','parser.py',255),
  ('multiplicative_expression -> cast_expression','multiplicative_expression',1,'p_multiplicative_expression_1','parser.py',259),
  ('multiplicative_expression -> multiplicative_expression MULT cast_expression','multiplicative_expression',3,'p_multiplicative_expression_2','parser.py',263),
  ('multiplicative_expression -> multiplicative_expression DIV cast_expression','multiplicative_expression',3,'p_multiplicative_expression_3','parser.py',267),
  ('multiplicative_expression -> multiplicative_expression MOD cast_expression','multiplicative_expression',3,'p_multiplicative_expression_4','parser.py',271),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression_1','parser.py',275),
  ('cast_expression -> LPAREN type_name RPAREN cast_expression','cast_expression',4,'p_cast_expression_2','parser.py',279),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression_1','parser.py',283),
  ('unary_expression -> INCREMENT unary_expression','unary_expression',2,'p_unary_expression_2','parser.py',287),
  ('unary_expression -> DECREMENT unary_expression','unary_expression',2,'p_unary_expression_3','parser.py',291),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression_4','parser.py',295),
  ('unary_expression -> SIZEOF unary_expression','unary_expression',2,'p_unary_expression_5','parser.py',299),
  ('unary_expression -> SIZEOF LPAREN type_name RPAREN','unary_expression',4,'p_unary_expression_6','parser.py',303),
  ('unary_operator -> AND_OP','unary_operator',1,'p_unary_operator_1','parser.py',307),
  ('unary_operator -> MULT','unary_operator',1,'p_unary_operator_2','parser.py',311),
  ('unary_operator -> ADD','unary_operator',1,'p_unary_operator_3','parser.py',315),
  ('unary_operator -> MINUS','unary_operator',1,'p_unary_operator_4','parser.py',318),
  ('unary_operator -> TILDA','unary_operator',1,'p_unary_operator_5','parser.py',322),
  ('unary_operator -> NOT','unary_operator',1,'p_unary_operator_6','parser.py',326),
  ('type_name -> specifier_qualifier_list','type_name',1,'p_type_name_1','parser.py',331),
  ('specifier_qualifier_list -> type_specifier specifier_qualifier_list','specifier_qualifier_list',2,'p_specifier_qualifier_list_1','parser.py',335),
  ('specifier_qualifier_list -> type_specifier','specifier_qualifier_list',1,'p_specifier_qualifier_list_2','parser.py',339),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression_1','parser.py',343),
  ('primary_expression -> VARIABLE','primary_expression',1,'p_primary_expression_1','parser.py',347),
  ('primary_expression -> constant','primary_expression',1,'p_primary_expression_2','parser.py',351),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression_3','parser.py',355),
  ('constant -> HEX_INT','constant',1,'p_constant_1','parser.py',359),
  ('constant -> EXP_REAL','constant',1,'p_constant_2','parser.py',363),
  ('constant -> DOT_REAL','constant',1,'p_constant_3','parser.py',367),
  ('constant -> DEC_INT','constant',1,'p_constant_4','parser.py',371),
  ('postfix_expression -> postfix_expression LBIG expression RBIG','postfix_expression',4,'p_postfix_expression_2','parser.py',375),
  ('postfix_expression -> postfix_expression LPAREN RPAREN','postfix_expression',3,'p_postfix_expression_3','parser.py',379),
  ('postfix_expression -> postfix_expression LPAREN argument_expression_list RPAREN','postfix_expression',4,'p_postfix_expression_4','parser.py',383),
  ('post_expression -> postfix_expression DOT VARIABLE','post_expression',3,'p_postfix_expression_5','parser.py',387),
  ('post_expression -> postfix_expression INCREMENT','post_expression',2,'p_postfix_expression_6','parser.py',391),
  ('post_expression -> postfix_expression DECREMENT','post_expression',2,'p_postfix_expression_7','parser.py',395),
  ('argument_expression_list -> assignment_expression','argument_expression_list',1,'p_argument_expression_list_1','parser.py',399),
  ('argument_expression_list -> argument_expression_list COMMA assignment_expression','argument_expression_list',3,'p_argument_expression_list_2','parser.py',403),
  ('expression -> assignment_expression','expression',1,'p_expression_1','parser.py',407),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression_2','parser.py',411),
  ('assignment_expression -> conditional_expression','assignment_expression',1,'p_assignment_expression_1','parser.py',415),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignement_expression_2','parser.py',419),
  ('assignment_operator -> EQUALS','assignment_operator',1,'p_assignment_operator_1','parser.py',423),
  ('assignment_operator -> MUL_ASSIGN','assignment_operator',1,'p_assignment_operator_2','parser.py',427),
  ('assignment_operator -> DIV_ASSIGN','assignment_operator',1,'p_assignment_operator_3','parser.py',431),
  ('assignment_operator -> MOD_ASSIGN','assignment_operator',1,'p_assignment_operator_4','parser.py',435),
  ('assignment_operator -> ADD_ASSIGN','assignment_operator',1,'p_assignment_operator_5','parser.py',439),
  ('assignment_operator -> SUB_ASSIGN','assignment_operator',1,'p_assignment_operator_6','parser.py',443),
  ('assignment_operator -> LEFT_ASSIGN','assignment_operator',1,'p_assignment_operator_7','parser.py',447),
  ('assignment_operator -> RIGHT_ASSIGN','assignment_operator',1,'p_assignment_operator_8','parser.py',451),
  ('assignment_operator -> AND_ASSIGN','assignment_operator',1,'p_assignment_operator_9','parser.py',455),
  ('assignment_operator -> XOR_ASSIGN','assignment_operator',1,'p_assignment_operator_10','parser.py',459),
  ('assignment_operator -> OR_ASSIGN','assignment_operator',1,'p_assignment_operator_11','parser.py',463),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',467),
]
