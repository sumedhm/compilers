
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xa3\x1c\x8b\x9cd\x89e\xd7\x04s1\x08\x13\xd4\xceq'
    
_lr_action_items = {'DO':([0,2,3,9,13,18,28,31,41,65,68,101,110,111,112,120,121,124,125,128,131,132,133,134,135,136,137,138,139,],[3,3,3,-5,-2,-3,-1,3,-4,3,-6,3,-59,-58,3,3,-61,-64,-62,-60,-65,3,-63,-56,-54,3,3,-57,-55,]),'SHORT':([0,2,3,9,13,18,28,31,41,65,68,101,110,111,112,120,121,124,125,128,131,132,133,134,135,136,137,138,139,],[1,1,1,-5,-2,-3,-1,1,-4,1,-6,1,-59,-58,1,1,-61,-64,-62,-60,-65,1,-63,-56,-54,1,1,-57,-55,]),'EQUALS_OP':([5,8,10,11,12,14,19,20,21,24,26,35,37,67,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,103,106,107,119,126,],[-22,-48,-52,-20,-21,-19,-49,-47,-53,-18,39,-51,-50,39,39,-32,-33,-37,39,39,39,39,-42,39,-34,-43,-39,-46,-35,39,39,-40,-38,-44,-45,39,-36,-41,39,39,39,39,39,39,]),'NOTEQUALS':([5,8,10,11,12,14,19,20,21,24,26,35,37,67,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,103,106,107,119,126,],[-22,-48,-52,-20,-21,-19,-49,-47,-53,-18,38,-51,-50,38,38,-32,-33,-37,38,38,38,38,-42,38,-34,-43,-39,-46,-35,38,38,-40,-38,-44,-45,38,-36,-41,38,38,38,38,38,38,]),'VOID':([0,2,3,9,13,18,28,31,41,65,68,101,110,111,112,120,121,124,125,128,131,132,133,134,135,136,137,138,139,],[4,4,4,-5,-2,-3,-1,4,-4,4,-6,4,-59,-58,4,4,-61,-64,-62,-60,-65,4,-63,-56,-54,4,4,-57,-55,]),'CHARACTER':([0,2,3,9,13,18,28,31,32,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,65,68,70,97,98,101,104,105,109,110,111,112,118,120,121,123,124,125,128,131,132,133,134,135,136,137,138,139,],[5,5,5,-5,-2,-3,-1,5,5,5,5,5,5,-4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,-6,5,5,5,5,5,5,5,-59,-58,5,5,5,-61,5,-64,-62,-60,-65,5,-63,-56,-54,5,5,-57,-55,]),'CHAR':([0,2,3,9,13,18,28,31,41,65,68,101,110,111,112,120,121,124,125,128,131,132,133,134,135,136,137,138,139,],[6,6,6,-5,-2,-3,-1,6,-4,6,-6,6,-59,-58,6,6,-61,-64,-62,-60,-65,6,-63,-56,-54,6,6,-57,-55,]),'WHILE':([0,2,3,9,13,18,28,29,30,31,41,65,66,68,99,101,110,111,112,120,121,124,125,128,131,132,133,134,135,136,137,138,139,],[7,7,7,-5,-2,-3,-1,63,64,7,-4,7,100,-6,108,7,-59,-58,7,7,-61,-64,-62,-60,-65,7,-63,-56,-54,7,7,-57,-55,]),'DIV_ASSIGN':([5,8,10,11,12,14,19,20,21,24,26,35,37,67,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,103,106,107,119,126,],[-22,-48,-52,-20,-21,-19,-49,-47,-53,-18,40,-51,-50,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'SEMI_COLON':([3,5,8,10,11,12,14,19,20,21,24,26,33,34,35,37,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,101,102,103,114,115,116,117,122,127,130,132,],[29,-22,-48,-52,-20,-21,-19,-49,-47,-53,-18,41,68,-9,-51,-50,104,-67,-32,-33,-37,-26,-24,-25,-30,-42,-29,-34,-43,-39,-46,-35,-23,-31,-40,-38,-44,-45,-28,-36,-41,-27,110,-7,-10,123,-66,124,125,-8,131,133,134,]),'DIV':([5,8,10,11,12,14,19,20,21,24,26,35,37,67,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,103,106,107,119,126,],[-22,-48,-52,-20,-21,-19,-49,-47,-53,-18,42,-51,-50,42,42,-32,-33,-37,-26,42,-25,-30,-42,-29,-34,-43,-39,-46,-35,42,-31,-40,-38,-44,-45,-28,-36,-41,-27,42,42,42,42,42,]),'MINUS':([5,8,10,11,12,14,19,20,21,24,26,35,37,67,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,103,106,107,119,126,],[-22,-48,-52,-20,-21,-19,-49,-47,-53,-18,43,-51,-50,43,43,-32,-33,-37,-26,-24,-25,-30,-42,-29,-34,-43,-39,-46,-35,-23,-31,-40,-38,-44,-45,-28,-36,-41,-27,43,43,43,43,43,]),'MULT':([5,8,10,11,12,14,19,20,21,24,26,35,37,67,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,103,106,107,119,126,],[-22,-48,-52,-20,-21,-19,-49,-47,-53,-18,44,-51,-50,44,44,-32,-33,-37,-26,44,-25,-30,-42,-29,-34,-43,-39,-46,-35,44,-31,-40,-38,-44,-45,-28,-36,-41,-27,44,44,44,44,44,]),'LE_OP':([5,8,10,11,12,14,19,20,21,24,26,35,37,67,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,103,106,107,119,126,],[-22,-48,-52,-20,-21,-19,-49,-47,-53,-18,45,-51,-50,45,45,-32,-33,-37,45,45,45,-30,-42,-29,-34,-43,-39,-46,-35,45,-31,-40,-38,-44,-45,-28,-36,-41,45,45,45,45,45,45,]),'RIGHT_ASSIGN':([5,8,10,11,12,14,19,20,21,24,26,35,37,67,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,103,106,107,119,126,],[-22,-48,-52,-20,-21,-19,-49,-47,-53,-18,46,-51,-50,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'G_OP':([5,8,10,11,12,14,19,20,21,24,26,35,37,67,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,103,106,107,119,126,],[-22,-48,-52,-20,-21,-19,-49,-47,-53,-18,47,-51,-50,47,47,-32,-33,-37,47,47,47,-30,-42,-29,-34,-43,-39,-46,-35,47,-31,-40,-38,-44,-45,-28,-36,-41,47,47,47,47,47,47,]),'EXP_REAL':([0,2,3,9,13,18,28,31,32,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,65,68,70,97,98,101,104,105,109,110,111,112,118,120,121,123,124,125,128,131,132,133,134,135,136,137,138,139,],[11,11,11,-5,-2,-3,-1,11,11,11,11,11,11,-4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-6,11,11,11,11,11,11,11,-59,-58,11,11,11,-61,11,-64,-62,-60,-65,11,-63,-56,-54,11,11,-57,-55,]),'DEC_INT':([0,2,3,9,13,18,28,31,32,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,65,68,70,97,98,101,104,105,109,110,111,112,118,120,121,123,124,125,128,131,132,133,134,135,136,137,138,139,],[12,12,12,-5,-2,-3,-1,12,12,12,12,12,12,-4,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,-6,12,12,12,12,12,12,12,-59,-58,12,12,12,-61,12,-64,-62,-60,-65,12,-63,-56,-54,12,12,-57,-55,]),'LONG':([0,2,3,9,13,18,28,31,41,65,68,101,110,111,112,120,121,124,125,128,131,132,133,134,135,136,137,138,139,],[27,27,27,-5,-2,-3,-1,27,-4,27,-6,27,-59,-58,27,27,-61,-64,-62,-60,-65,27,-63,-56,-54,27,27,-57,-55,]),'AND_ASSIGN':([5,8,10,11,12,14,19,20,21,24,26,35,37,67,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,103,106,107,119,126,],[-22,-48,-52,-20,-21,-19,-49,-47,-53,-18,49,-51,-50,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'COMMA':([5,8,10,11,12,14,19,20,21,24,34,35,37,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,103,],[-22,-48,-52,-20,-21,-19,-49,-47,-53,-18,69,-51,-50,105,-32,-33,-37,-26,-24,-25,-30,-42,-29,-34,-43,-39,-46,-35,-23,-31,-40,-38,-44,-45,-28,-36,-41,-27,113,]),'INCREMENT':([0,2,3,9,13,18,19,28,31,32,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,65,68,70,97,98,101,104,105,109,110,111,112,118,120,121,123,124,125,128,131,132,133,134,135,136,137,138,139,],[10,10,10,-5,-2,-3,10,-1,10,10,10,10,10,10,-4,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,-6,10,10,10,10,10,10,10,-59,-58,10,10,10,-61,10,-64,-62,-60,-65,10,-63,-56,-54,10,10,-57,-55,]),'MUL_ASSIGN':([5,8,10,11,12,14,19,20,21,24,26,35,37,67,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,103,106,107,119,126,],[-22,-48,-52,-20,-21,-19,-49,-47,-53,-18,60,-51,-50,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'ADD_ASSIGN':([5,8,10,11,12,14,19,20,21,24,26,35,37,67,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,103,106,107,119,126,],[-22,-48,-52,-20,-21,-19,-49,-47,-53,-18,50,-51,-50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'$end':([2,9,13,18,28,41,68,110,111,121,124,125,128,131,133,134,135,138,139,],[0,-5,-2,-3,-1,-4,-6,-59,-58,-61,-64,-62,-60,-65,-63,-56,-54,-57,-55,]),'RBRACE':([9,13,18,28,31,41,65,68,110,111,112,120,121,124,125,128,131,133,134,135,136,137,138,139,],[-5,-2,-3,-1,66,-4,99,-6,-59,-58,121,128,-61,-64,-62,-60,-65,-63,-56,-54,138,139,-57,-55,]),'FOR':([0,2,3,9,13,18,28,31,41,65,68,101,110,111,112,120,121,124,125,128,131,132,133,134,135,136,137,138,139,],[17,17,17,-5,-2,-3,-1,17,-4,17,-6,17,-59,-58,17,17,-61,-64,-62,-60,-65,17,-63,-56,-54,17,17,-57,-55,]),'EQUALS':([5,8,10,11,12,14,19,20,21,24,26,34,35,37,67,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,103,106,107,119,126,],[-22,-48,-52,-20,-21,-19,-49,-47,-53,-18,51,70,-51,-50,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'AND_OP':([5,8,10,11,12,14,19,20,21,24,26,35,37,67,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,103,106,107,119,126,],[-22,-48,-52,-20,-21,-19,-49,-47,-53,-18,52,-51,-50,52,52,52,52,-37,52,52,52,52,-42,52,-34,-43,-39,-46,-35,52,52,-40,-38,-44,-45,52,-36,-41,52,52,52,52,52,52,]),'ADD':([5,8,10,11,12,14,19,20,21,24,26,35,37,67,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,103,106,107,119,126,],[-22,-48,-52,-20,-21,-19,-49,-47,-53,-18,53,-51,-50,53,53,-32,-33,-37,-26,-24,-25,-30,-42,-29,-34,-43,-39,-46,-35,-23,-31,-40,-38,-44,-45,-28,-36,-41,-27,53,53,53,53,53,]),'GE_OP':([5,8,10,11,12,14,19,20,21,24,26,35,37,67,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,103,106,107,119,126,],[-22,-48,-52,-20,-21,-19,-49,-47,-53,-18,54,-51,-50,54,54,-32,-33,-37,54,54,54,-30,-42,-29,-34,-43,-39,-46,-35,54,-31,-40,-38,-44,-45,-28,-36,-41,54,54,54,54,54,54,]),'LPAREN':([7,17,63,64,100,108,],[32,36,97,98,109,118,]),'VARIABLE':([0,1,2,3,4,6,9,10,13,15,16,18,21,22,23,25,27,28,31,32,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,65,68,69,70,97,98,101,104,105,109,110,111,112,113,118,120,121,123,124,125,128,131,132,133,134,135,136,137,138,139,],[19,-16,19,19,-15,-13,-5,-52,-2,34,35,-3,-53,-11,-14,-12,-17,-1,19,19,19,19,19,19,-4,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-6,34,19,19,19,19,19,19,19,-59,-58,19,34,19,19,-61,19,-64,-62,-60,-65,19,-63,-56,-54,19,19,-57,-55,]),'RPAREN':([5,8,10,11,12,14,19,20,21,24,35,37,67,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,106,107,115,119,126,129,],[-22,-48,-52,-20,-21,-19,-49,-47,-53,-18,-51,-50,101,-67,-32,-33,-37,-26,-24,-25,-30,-42,-29,-34,-43,-39,-46,-35,-23,-31,-40,-38,-44,-45,-28,-36,-41,-27,116,117,-66,127,130,132,]),'LEFT_ASSIGN':([5,8,10,11,12,14,19,20,21,24,26,35,37,67,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,103,106,107,119,126,],[-22,-48,-52,-20,-21,-19,-49,-47,-53,-18,61,-51,-50,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'OR_OP':([5,8,10,11,12,14,19,20,21,24,26,35,37,67,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,103,106,107,119,126,],[-22,-48,-52,-20,-21,-19,-49,-47,-53,-18,48,-51,-50,48,48,48,48,-37,48,48,48,48,-42,48,-34,-43,-39,-46,-35,48,48,-40,-38,-44,-45,48,-36,-41,48,48,48,48,48,48,]),'SUB_ASSIGN':([5,8,10,11,12,14,19,20,21,24,26,35,37,67,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,103,106,107,119,126,],[-22,-48,-52,-20,-21,-19,-49,-47,-53,-18,55,-51,-50,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'MOD_ASSIGN':([5,8,10,11,12,14,19,20,21,24,26,35,37,67,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,103,106,107,119,126,],[-22,-48,-52,-20,-21,-19,-49,-47,-53,-18,56,-51,-50,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'LBRACE':([3,101,132,],[31,112,136,]),'XOR_ASSIGN':([5,8,10,11,12,14,19,20,21,24,26,35,37,67,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,103,106,107,119,126,],[-22,-48,-52,-20,-21,-19,-49,-47,-53,-18,57,-51,-50,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'INT':([0,2,3,9,13,18,28,31,41,65,68,101,110,111,112,120,121,124,125,128,131,132,133,134,135,136,137,138,139,],[22,22,22,-5,-2,-3,-1,22,-4,22,-6,22,-59,-58,22,22,-61,-64,-62,-60,-65,22,-63,-56,-54,22,22,-57,-55,]),'DOUBLE':([0,2,3,9,13,18,28,31,41,65,68,101,110,111,112,120,121,124,125,128,131,132,133,134,135,136,137,138,139,],[23,23,23,-5,-2,-3,-1,23,-4,23,-6,23,-59,-58,23,23,-61,-64,-62,-60,-65,23,-63,-56,-54,23,23,-57,-55,]),'HEX_INT':([0,2,3,9,13,18,28,31,32,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,65,68,70,97,98,101,104,105,109,110,111,112,118,120,121,123,124,125,128,131,132,133,134,135,136,137,138,139,],[24,24,24,-5,-2,-3,-1,24,24,24,24,24,24,-4,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-6,24,24,24,24,24,24,24,-59,-58,24,24,24,-61,24,-64,-62,-60,-65,24,-63,-56,-54,24,24,-57,-55,]),'FLOAT':([0,2,3,9,13,18,28,31,41,65,68,101,110,111,112,120,121,124,125,128,131,132,133,134,135,136,137,138,139,],[25,25,25,-5,-2,-3,-1,25,-4,25,-6,25,-59,-58,25,25,-61,-64,-62,-60,-65,25,-63,-56,-54,25,25,-57,-55,]),'OR_ASSIGN':([5,8,10,11,12,14,19,20,21,24,26,35,37,67,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,103,106,107,119,126,],[-22,-48,-52,-20,-21,-19,-49,-47,-53,-18,58,-51,-50,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'L_OP':([5,8,10,11,12,14,19,20,21,24,26,35,37,67,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,103,106,107,119,126,],[-22,-48,-52,-20,-21,-19,-49,-47,-53,-18,59,-51,-50,59,59,-32,-33,-37,59,59,59,-30,-42,-29,-34,-43,-39,-46,-35,59,-31,-40,-38,-44,-45,-28,-36,-41,59,59,59,59,59,59,]),'DOT_REAL':([0,2,3,9,13,18,28,31,32,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,65,68,70,97,98,101,104,105,109,110,111,112,118,120,121,123,124,125,128,131,132,133,134,135,136,137,138,139,],[14,14,14,-5,-2,-3,-1,14,14,14,14,14,14,-4,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-6,14,14,14,14,14,14,14,-59,-58,14,14,14,-61,14,-64,-62,-60,-65,14,-63,-56,-54,14,14,-57,-55,]),'DECREMENT':([0,2,3,9,13,18,19,28,31,32,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,65,68,70,97,98,101,104,105,109,110,111,112,118,120,121,123,124,125,128,131,132,133,134,135,136,137,138,139,],[21,21,21,-5,-2,-3,21,-1,21,21,21,21,21,21,-4,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-6,21,21,21,21,21,21,21,-59,-58,21,21,21,-61,21,-64,-62,-60,-65,21,-63,-56,-54,21,21,-57,-55,]),'MOD':([5,8,10,11,12,14,19,20,21,24,26,35,37,67,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,103,106,107,119,126,],[-22,-48,-52,-20,-21,-19,-49,-47,-53,-18,62,-51,-50,62,62,-32,-33,-37,-26,62,-25,-30,-42,-29,-34,-43,-39,-46,-35,62,-31,-40,-38,-44,-45,-28,-36,-41,-27,62,62,62,62,62,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,31,112,136,],[2,65,120,137,]),'statement':([0,2,3,31,65,101,112,120,132,136,137,],[13,28,30,13,28,111,13,28,135,13,28,]),'unary_expression':([0,2,3,31,32,36,38,39,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,65,70,97,98,101,104,105,109,112,118,120,123,132,136,137,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'iterative_exp':([36,104,105,123,],[71,114,115,129,]),'type':([0,2,3,31,65,101,112,120,132,136,137,],[15,15,15,15,15,15,15,15,15,15,15,]),'enum_list':([15,69,113,],[33,102,122,]),'exp':([0,2,3,31,32,36,38,39,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,65,70,97,98,101,104,105,109,112,118,120,123,132,136,137,],[26,26,26,26,67,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,26,103,106,107,26,72,72,119,26,126,26,72,26,26,26,]),'declaration':([0,2,3,31,65,101,112,120,132,136,137,],[18,18,18,18,18,18,18,18,18,18,18,]),'constant':([0,2,3,31,32,36,38,39,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,65,70,97,98,101,104,105,109,112,118,120,123,132,136,137,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'iterative_statement':([0,2,3,31,65,101,112,120,132,136,137,],[9,9,9,9,9,9,9,9,9,9,9,]),'unary_operator':([0,2,3,19,31,32,36,38,39,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,65,70,97,98,101,104,105,109,112,118,120,123,132,136,137,],[16,16,16,37,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statements","S'",1,None,None,None),
  ('statements -> statements statement','statements',2,'p_statements_1','parser.py',19),
  ('statements -> statement','statements',1,'p_statements_2','parser.py',23),
  ('statement -> declaration','statement',1,'p_statement_1','parser.py',27),
  ('statement -> exp SEMI_COLON','statement',2,'p_statement_2','parser.py',31),
  ('statement -> iterative_statement','statement',1,'p_statement_3','parser.py',35),
  ('declaration -> type enum_list SEMI_COLON','declaration',3,'p_declaration_1','parser.py',39),
  ('enum_list -> VARIABLE COMMA enum_list','enum_list',3,'p_enum_list_1','parser.py',43),
  ('enum_list -> VARIABLE EQUALS exp COMMA enum_list','enum_list',5,'p_enum_list_2','parser.py',47),
  ('enum_list -> VARIABLE','enum_list',1,'p_enum_list_3','parser.py',51),
  ('enum_list -> VARIABLE EQUALS exp','enum_list',3,'p_enum_list_4','parser.py',55),
  ('type -> INT','type',1,'p_type_1','parser.py',59),
  ('type -> FLOAT','type',1,'p_type_2','parser.py',63),
  ('type -> CHAR','type',1,'p_type_3','parser.py',67),
  ('type -> DOUBLE','type',1,'p_type_4','parser.py',71),
  ('type -> VOID','type',1,'p_type_5','parser.py',75),
  ('type -> SHORT','type',1,'p_type_6','parser.py',79),
  ('type -> LONG','type',1,'p_type_7','parser.py',83),
  ('constant -> HEX_INT','constant',1,'p_constant_1','parser.py',87),
  ('constant -> DOT_REAL','constant',1,'p_constant_2','parser.py',91),
  ('constant -> EXP_REAL','constant',1,'p_constant_3','parser.py',95),
  ('constant -> DEC_INT','constant',1,'p_constant_4','parser.py',99),
  ('constant -> CHARACTER','constant',1,'p_constant_5','parser.py',103),
  ('exp -> exp ADD exp','exp',3,'p_exp_1','parser.py',107),
  ('exp -> exp MINUS exp','exp',3,'p_exp_2','parser.py',111),
  ('exp -> exp MULT exp','exp',3,'p_exp_3','parser.py',115),
  ('exp -> exp DIV exp','exp',3,'p_exp_4','parser.py',119),
  ('exp -> exp MOD exp','exp',3,'p_exp_5','parser.py',123),
  ('exp -> exp L_OP exp','exp',3,'p_exp_6','parser.py',127),
  ('exp -> exp G_OP exp','exp',3,'p_exp_7','parser.py',131),
  ('exp -> exp LE_OP exp','exp',3,'p_exp_8','parser.py',135),
  ('exp -> exp GE_OP exp','exp',3,'p_exp_9','parser.py',139),
  ('exp -> exp NOTEQUALS exp','exp',3,'p_exp_10','parser.py',143),
  ('exp -> exp EQUALS_OP exp','exp',3,'p_exp_11','parser.py',147),
  ('exp -> exp OR_OP exp','exp',3,'p_exp_12','parser.py',151),
  ('exp -> exp AND_OP exp','exp',3,'p_exp_13','parser.py',155),
  ('exp -> exp MUL_ASSIGN exp','exp',3,'p_exp_14','parser.py',159),
  ('exp -> exp DIV_ASSIGN exp','exp',3,'p_exp_15','parser.py',163),
  ('exp -> exp MOD_ASSIGN exp','exp',3,'p_exp_16','parser.py',167),
  ('exp -> exp ADD_ASSIGN exp','exp',3,'p_exp_17','parser.py',171),
  ('exp -> exp SUB_ASSIGN exp','exp',3,'p_exp_18','parser.py',175),
  ('exp -> exp LEFT_ASSIGN exp','exp',3,'p_exp_19','parser.py',179),
  ('exp -> exp RIGHT_ASSIGN exp','exp',3,'p_exp_20','parser.py',183),
  ('exp -> exp AND_ASSIGN exp','exp',3,'p_exp_21','parser.py',187),
  ('exp -> exp XOR_ASSIGN exp','exp',3,'p_exp_22','parser.py',191),
  ('exp -> exp OR_ASSIGN exp','exp',3,'p_exp_23','parser.py',195),
  ('exp -> exp EQUALS exp','exp',3,'p_exp_24','parser.py',199),
  ('exp -> unary_expression','exp',1,'p_exp_25','parser.py',203),
  ('exp -> constant','exp',1,'p_exp_26','parser.py',207),
  ('exp -> VARIABLE','exp',1,'p_exp_27','parser.py',211),
  ('unary_expression -> VARIABLE unary_operator','unary_expression',2,'p_unary_expression_1','parser.py',215),
  ('unary_expression -> unary_operator VARIABLE','unary_expression',2,'p_unary_expression_2','parser.py',219),
  ('unary_operator -> INCREMENT','unary_operator',1,'p_unary_operator_1','parser.py',223),
  ('unary_operator -> DECREMENT','unary_operator',1,'p_unary_operator_2','parser.py',227),
  ('iterative_statement -> FOR LPAREN iterative_exp SEMI_COLON iterative_exp SEMI_COLON iterative_exp RPAREN statement','iterative_statement',9,'p_iterative_statement_1','parser.py',231),
  ('iterative_statement -> FOR LPAREN iterative_exp SEMI_COLON iterative_exp SEMI_COLON iterative_exp RPAREN LBRACE statements RBRACE','iterative_statement',11,'p_iterative_statement_2','parser.py',235),
  ('iterative_statement -> FOR LPAREN iterative_exp SEMI_COLON iterative_exp SEMI_COLON iterative_exp RPAREN SEMI_COLON','iterative_statement',9,'p_iterative_statement_3','parser.py',239),
  ('iterative_statement -> FOR LPAREN iterative_exp SEMI_COLON iterative_exp SEMI_COLON iterative_exp RPAREN LBRACE RBRACE','iterative_statement',10,'p_iterative_statement_4','parser.py',243),
  ('iterative_statement -> WHILE LPAREN exp RPAREN statement','iterative_statement',5,'p_iterative_statement_5','parser.py',247),
  ('iterative_statement -> WHILE LPAREN exp RPAREN SEMI_COLON','iterative_statement',5,'p_iterative_statement_6','parser.py',251),
  ('iterative_statement -> WHILE LPAREN exp RPAREN LBRACE statements RBRACE','iterative_statement',7,'p_iterative_statement_7','parser.py',255),
  ('iterative_statement -> WHILE LPAREN exp RPAREN LBRACE RBRACE','iterative_statement',6,'p_iterative_statement_8','parser.py',259),
  ('iterative_statement -> DO statement WHILE LPAREN exp RPAREN SEMI_COLON','iterative_statement',7,'p_iterative_statement_9','parser.py',263),
  ('iterative_statement -> DO LBRACE statements RBRACE WHILE LPAREN exp RPAREN SEMI_COLON','iterative_statement',9,'p_iterative_statement_10','parser.py',267),
  ('iterative_statement -> DO SEMI_COLON WHILE LPAREN exp RPAREN SEMI_COLON','iterative_statement',7,'p_iterative_statement_11','parser.py',271),
  ('iterative_statement -> DO LBRACE RBRACE WHILE LPAREN exp RPAREN SEMI_COLON','iterative_statement',8,'p_iterative_statement_12','parser.py',275),
  ('iterative_exp -> exp COMMA iterative_exp','iterative_exp',3,'p_iterative_exp_1','parser.py',279),
  ('iterative_exp -> exp','iterative_exp',1,'p_iterative_exp_2','parser.py',283),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',287),
]
