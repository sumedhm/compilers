
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = "\x84~\xd5z\x0f\xee$.\xa9uz\x7f\x16v'\xe4"
    
_lr_action_items = {'NOTEQUALS':([4,6,7,8,10,13,16,18,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,],[-18,-43,-16,-17,-15,-19,-14,22,-29,-30,-34,22,22,22,22,-39,22,-31,-36,-42,-32,22,22,-37,-35,-40,-41,22,-33,-38,22,22,]),'SHORT':([0,2,9,12,20,25,46,72,],[1,1,-2,-3,-1,-4,-5,-6,]),'EQUALS_OP':([4,6,7,8,10,13,16,18,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,],[-18,-43,-16,-17,-15,-19,-14,23,-29,-30,-34,23,23,23,23,-39,23,-31,-36,-42,-32,23,23,-37,-35,-40,-41,23,-33,-38,23,23,]),'VOID':([0,2,9,12,20,25,46,72,],[3,3,-2,-3,-1,-4,-5,-6,]),'CHARACTER':([0,2,9,12,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,72,],[4,4,-2,-3,-1,4,4,4,-4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,-5,4,-6,]),'CHAR':([0,2,9,12,20,25,46,72,],[5,5,-2,-3,-1,-4,-5,-6,]),'DIV_ASSIGN':([4,6,7,8,10,13,16,18,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,],[-18,-43,-16,-17,-15,-19,-14,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'SEMI_COLON':([4,6,7,8,10,13,16,18,21,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,],[-18,-43,-16,-17,-15,-19,-14,25,46,-29,-30,-34,-23,-21,-22,-27,-39,-26,-31,-36,-42,-32,-20,-28,-37,-35,-40,-41,-25,-33,-38,-24,72,]),'DIV':([4,6,7,8,10,13,16,18,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,],[-18,-43,-16,-17,-15,-19,-14,26,-29,-30,-34,-23,26,-22,-27,-39,-26,-31,-36,-42,-32,26,-28,-37,-35,-40,-41,-25,-33,-38,-24,26,]),'MINUS':([4,6,7,8,10,13,16,18,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,],[-18,-43,-16,-17,-15,-19,-14,27,-29,-30,-34,-23,-21,-22,-27,-39,-26,-31,-36,-42,-32,-20,-28,-37,-35,-40,-41,-25,-33,-38,-24,27,]),'MULT':([4,6,7,8,10,13,16,18,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,],[-18,-43,-16,-17,-15,-19,-14,28,-29,-30,-34,-23,28,-22,-27,-39,-26,-31,-36,-42,-32,28,-28,-37,-35,-40,-41,-25,-33,-38,-24,28,]),'LE_OP':([4,6,7,8,10,13,16,18,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,],[-18,-43,-16,-17,-15,-19,-14,29,-29,-30,-34,29,29,29,-27,-39,-26,-31,-36,-42,-32,29,-28,-37,-35,-40,-41,-25,-33,-38,29,29,]),'RIGHT_ASSIGN':([4,6,7,8,10,13,16,18,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,],[-18,-43,-16,-17,-15,-19,-14,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'G_OP':([4,6,7,8,10,13,16,18,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,],[-18,-43,-16,-17,-15,-19,-14,31,-29,-30,-34,31,31,31,-27,-39,-26,-31,-36,-42,-32,31,-28,-37,-35,-40,-41,-25,-33,-38,31,31,]),'EXP_REAL':([0,2,9,12,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,72,],[7,7,-2,-3,-1,7,7,7,-4,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,-5,7,-6,]),'DEC_INT':([0,2,9,12,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,72,],[8,8,-2,-3,-1,8,8,8,-4,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,-5,8,-6,]),'LONG':([0,2,9,12,20,25,46,72,],[19,19,-2,-3,-1,-4,-5,-6,]),'AND_ASSIGN':([4,6,7,8,10,13,16,18,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,],[-18,-43,-16,-17,-15,-19,-14,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'MUL_ASSIGN':([4,6,7,8,10,13,16,18,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,],[-18,-43,-16,-17,-15,-19,-14,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'$end':([2,9,12,20,25,46,72,],[0,-2,-3,-1,-4,-5,-6,]),'EQUALS':([4,6,7,8,10,13,16,18,21,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,],[-18,-43,-16,-17,-15,-19,-14,34,47,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'AND_OP':([4,6,7,8,10,13,16,18,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,],[-18,-43,-16,-17,-15,-19,-14,35,35,35,-34,35,35,35,35,-39,35,-31,-36,-42,-32,35,35,-37,-35,-40,-41,35,-33,-38,35,35,]),'ADD':([4,6,7,8,10,13,16,18,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,],[-18,-43,-16,-17,-15,-19,-14,36,-29,-30,-34,-23,-21,-22,-27,-39,-26,-31,-36,-42,-32,-20,-28,-37,-35,-40,-41,-25,-33,-38,-24,36,]),'GE_OP':([4,6,7,8,10,13,16,18,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,],[-18,-43,-16,-17,-15,-19,-14,37,-29,-30,-34,37,37,37,-27,-39,-26,-31,-36,-42,-32,37,-28,-37,-35,-40,-41,-25,-33,-38,37,37,]),'VARIABLE':([0,1,2,3,5,9,11,12,14,15,17,19,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,72,],[13,-12,13,-11,-9,-2,21,-3,-7,-10,-8,-13,-1,13,13,13,-4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-5,13,-6,]),'OR_OP':([4,6,7,8,10,13,16,18,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,],[-18,-43,-16,-17,-15,-19,-14,32,32,32,-34,32,32,32,32,-39,32,-31,-36,-42,-32,32,32,-37,-35,-40,-41,32,-33,-38,32,32,]),'SUB_ASSIGN':([4,6,7,8,10,13,16,18,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,],[-18,-43,-16,-17,-15,-19,-14,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'MOD_ASSIGN':([4,6,7,8,10,13,16,18,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,],[-18,-43,-16,-17,-15,-19,-14,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'XOR_ASSIGN':([4,6,7,8,10,13,16,18,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,],[-18,-43,-16,-17,-15,-19,-14,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'INT':([0,2,9,12,20,25,46,72,],[14,14,-2,-3,-1,-4,-5,-6,]),'DOUBLE':([0,2,9,12,20,25,46,72,],[15,15,-2,-3,-1,-4,-5,-6,]),'HEX_INT':([0,2,9,12,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,72,],[16,16,-2,-3,-1,16,16,16,-4,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-5,16,-6,]),'FLOAT':([0,2,9,12,20,25,46,72,],[17,17,-2,-3,-1,-4,-5,-6,]),'OR_ASSIGN':([4,6,7,8,10,13,16,18,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,],[-18,-43,-16,-17,-15,-19,-14,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'L_OP':([4,6,7,8,10,13,16,18,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,],[-18,-43,-16,-17,-15,-19,-14,42,-29,-30,-34,42,42,42,-27,-39,-26,-31,-36,-42,-32,42,-28,-37,-35,-40,-41,-25,-33,-38,42,42,]),'DOT_REAL':([0,2,9,12,20,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,72,],[10,10,-2,-3,-1,10,10,10,-4,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,-5,10,-6,]),'LEFT_ASSIGN':([4,6,7,8,10,13,16,18,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,],[-18,-43,-16,-17,-15,-19,-14,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'MOD':([4,6,7,8,10,13,16,18,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,],[-18,-43,-16,-17,-15,-19,-14,45,-29,-30,-34,-23,45,-22,-27,-39,-26,-31,-36,-42,-32,45,-28,-37,-35,-40,-41,-25,-33,-38,-24,45,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'constant':([0,2,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'statement':([0,2,],[9,20,]),'exp':([0,2,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,],[18,18,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,]),'declaration':([0,2,],[12,12,]),'statements':([0,],[2,]),'type':([0,2,],[11,11,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statements","S'",1,None,None,None),
  ('statements -> statements statement','statements',2,'p_statements_1','parser.py',19),
  ('statements -> statement','statements',1,'p_statements_2','parser.py',23),
  ('statement -> declaration','statement',1,'p_statement_1','parser.py',27),
  ('statement -> exp SEMI_COLON','statement',2,'p_statement_2','parser.py',31),
  ('declaration -> type VARIABLE SEMI_COLON','declaration',3,'p_declaration_1','parser.py',35),
  ('declaration -> type VARIABLE EQUALS exp SEMI_COLON','declaration',5,'p_declaration_2','parser.py',39),
  ('type -> INT','type',1,'p_type_1','parser.py',42),
  ('type -> FLOAT','type',1,'p_type_2','parser.py',46),
  ('type -> CHAR','type',1,'p_type_3','parser.py',50),
  ('type -> DOUBLE','type',1,'p_type_4','parser.py',54),
  ('type -> VOID','type',1,'p_type_5','parser.py',58),
  ('type -> SHORT','type',1,'p_type_6','parser.py',62),
  ('type -> LONG','type',1,'p_type_7','parser.py',66),
  ('constant -> HEX_INT','constant',1,'p_constant_1','parser.py',70),
  ('constant -> DOT_REAL','constant',1,'p_constant_2','parser.py',74),
  ('constant -> EXP_REAL','constant',1,'p_constant_3','parser.py',78),
  ('constant -> DEC_INT','constant',1,'p_constant_4','parser.py',82),
  ('constant -> CHARACTER','constant',1,'p_constant_5','parser.py',86),
  ('constant -> VARIABLE','constant',1,'p_constant_6','parser.py',90),
  ('exp -> exp ADD exp','exp',3,'p_exp_1','parser.py',94),
  ('exp -> exp MINUS exp','exp',3,'p_exp_2','parser.py',98),
  ('exp -> exp MULT exp','exp',3,'p_exp_3','parser.py',102),
  ('exp -> exp DIV exp','exp',3,'p_exp_4','parser.py',106),
  ('exp -> exp MOD exp','exp',3,'p_exp_5','parser.py',110),
  ('exp -> exp L_OP exp','exp',3,'p_exp_6','parser.py',114),
  ('exp -> exp G_OP exp','exp',3,'p_exp_7','parser.py',118),
  ('exp -> exp LE_OP exp','exp',3,'p_exp_8','parser.py',122),
  ('exp -> exp GE_OP exp','exp',3,'p_exp_9','parser.py',126),
  ('exp -> exp NOTEQUALS exp','exp',3,'p_exp_10','parser.py',130),
  ('exp -> exp EQUALS_OP exp','exp',3,'p_exp_11','parser.py',134),
  ('exp -> exp OR_OP exp','exp',3,'p_exp_12','parser.py',138),
  ('exp -> exp AND_OP exp','exp',3,'p_exp_13','parser.py',142),
  ('exp -> exp MUL_ASSIGN exp','exp',3,'p_exp_14','parser.py',146),
  ('exp -> exp DIV_ASSIGN exp','exp',3,'p_exp_15','parser.py',150),
  ('exp -> exp MOD_ASSIGN exp','exp',3,'p_exp_16','parser.py',154),
  ('exp -> exp AND_ASSIGN exp','exp',3,'p_exp_17','parser.py',158),
  ('exp -> exp SUB_ASSIGN exp','exp',3,'p_exp_18','parser.py',162),
  ('exp -> exp LEFT_ASSIGN exp','exp',3,'p_exp_19','parser.py',166),
  ('exp -> exp RIGHT_ASSIGN exp','exp',3,'p_exp_20','parser.py',170),
  ('exp -> exp XOR_ASSIGN exp','exp',3,'p_exp_22','parser.py',174),
  ('exp -> exp OR_ASSIGN exp','exp',3,'p_exp_23','parser.py',178),
  ('exp -> exp EQUALS exp','exp',3,'p_exp_24','parser.py',182),
  ('exp -> constant','exp',1,'p_exp_25','parser.py',186),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',190),
]
