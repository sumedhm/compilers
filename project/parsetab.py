
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = 'Q\x96\x98B/Z\xcd\x16\xb5t\xe1KR\xad\x0b\x0e'
    
_lr_action_items = {'DO':([0,2,3,9,13,18,28,31,40,64,67,98,105,106,107,108,114,115,117,118,121,124,125,126,127,128,129,130,131,132,],[3,3,3,-5,-2,-3,-1,3,-4,3,-6,3,-56,-55,3,-7,3,-58,-61,-59,-57,-62,3,-60,-53,-51,3,3,-54,-52,]),'SHORT':([0,2,3,9,13,18,28,31,40,64,67,98,105,106,107,108,114,115,117,118,121,124,125,126,127,128,129,130,131,132,],[1,1,1,-5,-2,-3,-1,1,-4,1,-6,1,-56,-55,1,-7,1,-58,-61,-59,-57,-62,1,-60,-53,-51,1,1,-54,-52,]),'EQUALS_OP':([5,8,10,11,12,14,19,20,21,24,26,34,36,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,99,101,102,109,113,119,122,],[-19,-45,-49,-17,-18,-16,-46,-44,-50,-15,38,-48,-47,38,38,-29,-30,-34,38,38,38,38,-39,38,-31,-40,-36,-43,-32,38,38,-37,-35,-41,-42,38,-33,-38,38,38,38,38,38,38,38,38,]),'NOTEQUALS':([5,8,10,11,12,14,19,20,21,24,26,34,36,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,99,101,102,109,113,119,122,],[-19,-45,-49,-17,-18,-16,-46,-44,-50,-15,37,-48,-47,37,37,-29,-30,-34,37,37,37,37,-39,37,-31,-40,-36,-43,-32,37,37,-37,-35,-41,-42,37,-33,-38,37,37,37,37,37,37,37,37,]),'VOID':([0,2,3,9,13,18,28,31,40,64,67,98,105,106,107,108,114,115,117,118,121,124,125,126,127,128,129,130,131,132,],[4,4,4,-5,-2,-3,-1,4,-4,4,-6,4,-56,-55,4,-7,4,-58,-61,-59,-57,-62,4,-60,-53,-51,4,4,-54,-52,]),'CHARACTER':([0,2,3,9,13,18,28,31,32,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,64,67,68,94,95,98,100,104,105,106,107,108,112,114,115,116,117,118,121,124,125,126,127,128,129,130,131,132,],[5,5,5,-5,-2,-3,-1,5,5,5,5,5,5,-4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,-6,5,5,5,5,5,5,-56,-55,5,-7,5,5,-58,5,-61,-59,-57,-62,5,-60,-53,-51,5,5,-54,-52,]),'CHAR':([0,2,3,9,13,18,28,31,40,64,67,98,105,106,107,108,114,115,117,118,121,124,125,126,127,128,129,130,131,132,],[6,6,6,-5,-2,-3,-1,6,-4,6,-6,6,-56,-55,6,-7,6,-58,-61,-59,-57,-62,6,-60,-53,-51,6,6,-54,-52,]),'WHILE':([0,2,3,9,13,18,28,29,30,31,40,64,65,67,96,98,105,106,107,108,114,115,117,118,121,124,125,126,127,128,129,130,131,132,],[7,7,7,-5,-2,-3,-1,62,63,7,-4,7,97,-6,103,7,-56,-55,7,-7,7,-58,-61,-59,-57,-62,7,-60,-53,-51,7,7,-54,-52,]),'DIV_ASSIGN':([5,8,10,11,12,14,19,20,21,24,26,34,36,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,99,101,102,109,113,119,122,],[-19,-45,-49,-17,-18,-16,-46,-44,-50,-15,39,-48,-47,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'SEMI_COLON':([3,5,8,10,11,12,14,19,20,21,24,26,33,34,36,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,98,99,109,110,111,120,123,125,],[29,-19,-45,-49,-17,-18,-16,-46,-44,-50,-15,40,67,-48,-47,100,-29,-30,-34,-23,-21,-22,-27,-39,-26,-31,-40,-36,-43,-32,-20,-28,-37,-35,-41,-42,-25,-33,-38,-24,105,108,116,117,118,124,126,127,]),'DIV':([5,8,10,11,12,14,19,20,21,24,26,34,36,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,99,101,102,109,113,119,122,],[-19,-45,-49,-17,-18,-16,-46,-44,-50,-15,41,-48,-47,41,41,-29,-30,-34,-23,41,-22,-27,-39,-26,-31,-40,-36,-43,-32,41,-28,-37,-35,-41,-42,-25,-33,-38,-24,41,41,41,41,41,41,41,]),'MINUS':([5,8,10,11,12,14,19,20,21,24,26,34,36,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,99,101,102,109,113,119,122,],[-19,-45,-49,-17,-18,-16,-46,-44,-50,-15,42,-48,-47,42,42,-29,-30,-34,-23,-21,-22,-27,-39,-26,-31,-40,-36,-43,-32,-20,-28,-37,-35,-41,-42,-25,-33,-38,-24,42,42,42,42,42,42,42,]),'MULT':([5,8,10,11,12,14,19,20,21,24,26,34,36,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,99,101,102,109,113,119,122,],[-19,-45,-49,-17,-18,-16,-46,-44,-50,-15,43,-48,-47,43,43,-29,-30,-34,-23,43,-22,-27,-39,-26,-31,-40,-36,-43,-32,43,-28,-37,-35,-41,-42,-25,-33,-38,-24,43,43,43,43,43,43,43,]),'LE_OP':([5,8,10,11,12,14,19,20,21,24,26,34,36,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,99,101,102,109,113,119,122,],[-19,-45,-49,-17,-18,-16,-46,-44,-50,-15,44,-48,-47,44,44,-29,-30,-34,44,44,44,-27,-39,-26,-31,-40,-36,-43,-32,44,-28,-37,-35,-41,-42,-25,-33,-38,44,44,44,44,44,44,44,44,]),'RIGHT_ASSIGN':([5,8,10,11,12,14,19,20,21,24,26,34,36,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,99,101,102,109,113,119,122,],[-19,-45,-49,-17,-18,-16,-46,-44,-50,-15,45,-48,-47,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'G_OP':([5,8,10,11,12,14,19,20,21,24,26,34,36,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,99,101,102,109,113,119,122,],[-19,-45,-49,-17,-18,-16,-46,-44,-50,-15,46,-48,-47,46,46,-29,-30,-34,46,46,46,-27,-39,-26,-31,-40,-36,-43,-32,46,-28,-37,-35,-41,-42,-25,-33,-38,46,46,46,46,46,46,46,46,]),'EXP_REAL':([0,2,3,9,13,18,28,31,32,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,64,67,68,94,95,98,100,104,105,106,107,108,112,114,115,116,117,118,121,124,125,126,127,128,129,130,131,132,],[11,11,11,-5,-2,-3,-1,11,11,11,11,11,11,-4,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,-6,11,11,11,11,11,11,-56,-55,11,-7,11,11,-58,11,-61,-59,-57,-62,11,-60,-53,-51,11,11,-54,-52,]),'DEC_INT':([0,2,3,9,13,18,28,31,32,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,64,67,68,94,95,98,100,104,105,106,107,108,112,114,115,116,117,118,121,124,125,126,127,128,129,130,131,132,],[12,12,12,-5,-2,-3,-1,12,12,12,12,12,12,-4,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,-6,12,12,12,12,12,12,-56,-55,12,-7,12,12,-58,12,-61,-59,-57,-62,12,-60,-53,-51,12,12,-54,-52,]),'LONG':([0,2,3,9,13,18,28,31,40,64,67,98,105,106,107,108,114,115,117,118,121,124,125,126,127,128,129,130,131,132,],[27,27,27,-5,-2,-3,-1,27,-4,27,-6,27,-56,-55,27,-7,27,-58,-61,-59,-57,-62,27,-60,-53,-51,27,27,-54,-52,]),'AND_ASSIGN':([5,8,10,11,12,14,19,20,21,24,26,34,36,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,99,101,102,109,113,119,122,],[-19,-45,-49,-17,-18,-16,-46,-44,-50,-15,48,-48,-47,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'INCREMENT':([0,2,3,9,13,18,19,28,31,32,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,64,67,68,94,95,98,100,104,105,106,107,108,112,114,115,116,117,118,121,124,125,126,127,128,129,130,131,132,],[10,10,10,-5,-2,-3,10,-1,10,10,10,10,10,10,-4,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,-6,10,10,10,10,10,10,-56,-55,10,-7,10,10,-58,10,-61,-59,-57,-62,10,-60,-53,-51,10,10,-54,-52,]),'MUL_ASSIGN':([5,8,10,11,12,14,19,20,21,24,26,34,36,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,99,101,102,109,113,119,122,],[-19,-45,-49,-17,-18,-16,-46,-44,-50,-15,59,-48,-47,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'ADD_ASSIGN':([5,8,10,11,12,14,19,20,21,24,26,34,36,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,99,101,102,109,113,119,122,],[-19,-45,-49,-17,-18,-16,-46,-44,-50,-15,49,-48,-47,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'$end':([2,9,13,18,28,40,67,105,106,108,115,117,118,121,124,126,127,128,131,132,],[0,-5,-2,-3,-1,-4,-6,-56,-55,-7,-58,-61,-59,-57,-62,-60,-53,-51,-54,-52,]),'RBRACE':([9,13,18,28,31,40,64,67,105,106,107,108,114,115,117,118,121,124,126,127,128,129,130,131,132,],[-5,-2,-3,-1,65,-4,96,-6,-56,-55,115,-7,121,-58,-61,-59,-57,-62,-60,-53,-51,131,132,-54,-52,]),'FOR':([0,2,3,9,13,18,28,31,40,64,67,98,105,106,107,108,114,115,117,118,121,124,125,126,127,128,129,130,131,132,],[17,17,17,-5,-2,-3,-1,17,-4,17,-6,17,-56,-55,17,-7,17,-58,-61,-59,-57,-62,17,-60,-53,-51,17,17,-54,-52,]),'EQUALS':([5,8,10,11,12,14,19,20,21,24,26,33,34,36,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,99,101,102,109,113,119,122,],[-19,-45,-49,-17,-18,-16,-46,-44,-50,-15,50,68,-48,-47,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'AND_OP':([5,8,10,11,12,14,19,20,21,24,26,34,36,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,99,101,102,109,113,119,122,],[-19,-45,-49,-17,-18,-16,-46,-44,-50,-15,51,-48,-47,51,51,51,51,-34,51,51,51,51,-39,51,-31,-40,-36,-43,-32,51,51,-37,-35,-41,-42,51,-33,-38,51,51,51,51,51,51,51,51,]),'ADD':([5,8,10,11,12,14,19,20,21,24,26,34,36,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,99,101,102,109,113,119,122,],[-19,-45,-49,-17,-18,-16,-46,-44,-50,-15,52,-48,-47,52,52,-29,-30,-34,-23,-21,-22,-27,-39,-26,-31,-40,-36,-43,-32,-20,-28,-37,-35,-41,-42,-25,-33,-38,-24,52,52,52,52,52,52,52,]),'GE_OP':([5,8,10,11,12,14,19,20,21,24,26,34,36,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,99,101,102,109,113,119,122,],[-19,-45,-49,-17,-18,-16,-46,-44,-50,-15,53,-48,-47,53,53,-29,-30,-34,53,53,53,-27,-39,-26,-31,-40,-36,-43,-32,53,-28,-37,-35,-41,-42,-25,-33,-38,53,53,53,53,53,53,53,53,]),'LPAREN':([7,17,62,63,97,103,],[32,35,94,95,104,112,]),'VARIABLE':([0,1,2,3,4,6,9,10,13,15,16,18,21,22,23,25,27,28,31,32,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,64,67,68,94,95,98,100,104,105,106,107,108,112,114,115,116,117,118,121,124,125,126,127,128,129,130,131,132,],[19,-13,19,19,-12,-10,-5,-49,-2,33,34,-3,-50,-8,-11,-9,-14,-1,19,19,19,19,19,19,-4,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-6,19,19,19,19,19,19,-56,-55,19,-7,19,19,-58,19,-61,-59,-57,-62,19,-60,-53,-51,19,19,-54,-52,]),'RPAREN':([5,8,10,11,12,14,19,20,21,24,34,36,66,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,101,102,113,119,122,],[-19,-45,-49,-17,-18,-16,-46,-44,-50,-15,-48,-47,98,-29,-30,-34,-23,-21,-22,-27,-39,-26,-31,-40,-36,-43,-32,-20,-28,-37,-35,-41,-42,-25,-33,-38,-24,110,111,120,123,125,]),'LEFT_ASSIGN':([5,8,10,11,12,14,19,20,21,24,26,34,36,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,99,101,102,109,113,119,122,],[-19,-45,-49,-17,-18,-16,-46,-44,-50,-15,60,-48,-47,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'OR_OP':([5,8,10,11,12,14,19,20,21,24,26,34,36,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,99,101,102,109,113,119,122,],[-19,-45,-49,-17,-18,-16,-46,-44,-50,-15,47,-48,-47,47,47,47,47,-34,47,47,47,47,-39,47,-31,-40,-36,-43,-32,47,47,-37,-35,-41,-42,47,-33,-38,47,47,47,47,47,47,47,47,]),'SUB_ASSIGN':([5,8,10,11,12,14,19,20,21,24,26,34,36,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,99,101,102,109,113,119,122,],[-19,-45,-49,-17,-18,-16,-46,-44,-50,-15,54,-48,-47,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'MOD_ASSIGN':([5,8,10,11,12,14,19,20,21,24,26,34,36,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,99,101,102,109,113,119,122,],[-19,-45,-49,-17,-18,-16,-46,-44,-50,-15,55,-48,-47,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'LBRACE':([3,98,125,],[31,107,129,]),'XOR_ASSIGN':([5,8,10,11,12,14,19,20,21,24,26,34,36,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,99,101,102,109,113,119,122,],[-19,-45,-49,-17,-18,-16,-46,-44,-50,-15,56,-48,-47,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'INT':([0,2,3,9,13,18,28,31,40,64,67,98,105,106,107,108,114,115,117,118,121,124,125,126,127,128,129,130,131,132,],[22,22,22,-5,-2,-3,-1,22,-4,22,-6,22,-56,-55,22,-7,22,-58,-61,-59,-57,-62,22,-60,-53,-51,22,22,-54,-52,]),'DOUBLE':([0,2,3,9,13,18,28,31,40,64,67,98,105,106,107,108,114,115,117,118,121,124,125,126,127,128,129,130,131,132,],[23,23,23,-5,-2,-3,-1,23,-4,23,-6,23,-56,-55,23,-7,23,-58,-61,-59,-57,-62,23,-60,-53,-51,23,23,-54,-52,]),'HEX_INT':([0,2,3,9,13,18,28,31,32,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,64,67,68,94,95,98,100,104,105,106,107,108,112,114,115,116,117,118,121,124,125,126,127,128,129,130,131,132,],[24,24,24,-5,-2,-3,-1,24,24,24,24,24,24,-4,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-6,24,24,24,24,24,24,-56,-55,24,-7,24,24,-58,24,-61,-59,-57,-62,24,-60,-53,-51,24,24,-54,-52,]),'FLOAT':([0,2,3,9,13,18,28,31,40,64,67,98,105,106,107,108,114,115,117,118,121,124,125,126,127,128,129,130,131,132,],[25,25,25,-5,-2,-3,-1,25,-4,25,-6,25,-56,-55,25,-7,25,-58,-61,-59,-57,-62,25,-60,-53,-51,25,25,-54,-52,]),'OR_ASSIGN':([5,8,10,11,12,14,19,20,21,24,26,34,36,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,99,101,102,109,113,119,122,],[-19,-45,-49,-17,-18,-16,-46,-44,-50,-15,57,-48,-47,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'L_OP':([5,8,10,11,12,14,19,20,21,24,26,34,36,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,99,101,102,109,113,119,122,],[-19,-45,-49,-17,-18,-16,-46,-44,-50,-15,58,-48,-47,58,58,-29,-30,-34,58,58,58,-27,-39,-26,-31,-40,-36,-43,-32,58,-28,-37,-35,-41,-42,-25,-33,-38,58,58,58,58,58,58,58,58,]),'DOT_REAL':([0,2,3,9,13,18,28,31,32,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,64,67,68,94,95,98,100,104,105,106,107,108,112,114,115,116,117,118,121,124,125,126,127,128,129,130,131,132,],[14,14,14,-5,-2,-3,-1,14,14,14,14,14,14,-4,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-6,14,14,14,14,14,14,-56,-55,14,-7,14,14,-58,14,-61,-59,-57,-62,14,-60,-53,-51,14,14,-54,-52,]),'DECREMENT':([0,2,3,9,13,18,19,28,31,32,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,64,67,68,94,95,98,100,104,105,106,107,108,112,114,115,116,117,118,121,124,125,126,127,128,129,130,131,132,],[21,21,21,-5,-2,-3,21,-1,21,21,21,21,21,21,-4,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-6,21,21,21,21,21,21,-56,-55,21,-7,21,21,-58,21,-61,-59,-57,-62,21,-60,-53,-51,21,21,-54,-52,]),'MOD':([5,8,10,11,12,14,19,20,21,24,26,34,36,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,99,101,102,109,113,119,122,],[-19,-45,-49,-17,-18,-16,-46,-44,-50,-15,61,-48,-47,61,61,-29,-30,-34,-23,61,-22,-27,-39,-26,-31,-40,-36,-43,-32,61,-28,-37,-35,-41,-42,-25,-33,-38,-24,61,61,61,61,61,61,61,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,31,107,129,],[2,64,114,130,]),'statement':([0,2,3,31,64,98,107,114,125,129,130,],[13,28,30,13,28,106,13,28,128,13,28,]),'unary_expression':([0,2,3,31,32,35,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,64,68,94,95,98,100,104,107,112,114,116,125,129,130,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'type':([0,2,3,31,64,98,107,114,125,129,130,],[15,15,15,15,15,15,15,15,15,15,15,]),'exp':([0,2,3,31,32,35,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,64,68,94,95,98,100,104,107,112,114,116,125,129,130,],[26,26,26,26,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,26,99,101,102,26,109,113,26,119,26,122,26,26,26,]),'declaration':([0,2,3,31,64,98,107,114,125,129,130,],[18,18,18,18,18,18,18,18,18,18,18,]),'constant':([0,2,3,31,32,35,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,64,68,94,95,98,100,104,107,112,114,116,125,129,130,],[8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'iterative_statement':([0,2,3,31,64,98,107,114,125,129,130,],[9,9,9,9,9,9,9,9,9,9,9,]),'unary_operator':([0,2,3,19,31,32,35,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,64,68,94,95,98,100,104,107,112,114,116,125,129,130,],[16,16,16,36,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statements","S'",1,None,None,None),
  ('statements -> statements statement','statements',2,'p_statements_1','parser.py',19),
  ('statements -> statement','statements',1,'p_statements_2','parser.py',23),
  ('statement -> declaration','statement',1,'p_statement_1','parser.py',27),
  ('statement -> exp SEMI_COLON','statement',2,'p_statement_2','parser.py',31),
  ('statement -> iterative_statement','statement',1,'p_statement_3','parser.py',35),
  ('declaration -> type VARIABLE SEMI_COLON','declaration',3,'p_declaration_1','parser.py',39),
  ('declaration -> type VARIABLE EQUALS exp SEMI_COLON','declaration',5,'p_declaration_2','parser.py',43),
  ('type -> INT','type',1,'p_type_1','parser.py',46),
  ('type -> FLOAT','type',1,'p_type_2','parser.py',51),
  ('type -> CHAR','type',1,'p_type_3','parser.py',55),
  ('type -> DOUBLE','type',1,'p_type_4','parser.py',59),
  ('type -> VOID','type',1,'p_type_5','parser.py',63),
  ('type -> SHORT','type',1,'p_type_6','parser.py',67),
  ('type -> LONG','type',1,'p_type_7','parser.py',71),
  ('constant -> HEX_INT','constant',1,'p_constant_1','parser.py',75),
  ('constant -> DOT_REAL','constant',1,'p_constant_2','parser.py',79),
  ('constant -> EXP_REAL','constant',1,'p_constant_3','parser.py',83),
  ('constant -> DEC_INT','constant',1,'p_constant_4','parser.py',87),
  ('constant -> CHARACTER','constant',1,'p_constant_5','parser.py',91),
  ('exp -> exp ADD exp','exp',3,'p_exp_1','parser.py',95),
  ('exp -> exp MINUS exp','exp',3,'p_exp_2','parser.py',99),
  ('exp -> exp MULT exp','exp',3,'p_exp_3','parser.py',103),
  ('exp -> exp DIV exp','exp',3,'p_exp_4','parser.py',107),
  ('exp -> exp MOD exp','exp',3,'p_exp_5','parser.py',111),
  ('exp -> exp L_OP exp','exp',3,'p_exp_6','parser.py',115),
  ('exp -> exp G_OP exp','exp',3,'p_exp_7','parser.py',119),
  ('exp -> exp LE_OP exp','exp',3,'p_exp_8','parser.py',123),
  ('exp -> exp GE_OP exp','exp',3,'p_exp_9','parser.py',127),
  ('exp -> exp NOTEQUALS exp','exp',3,'p_exp_10','parser.py',131),
  ('exp -> exp EQUALS_OP exp','exp',3,'p_exp_11','parser.py',135),
  ('exp -> exp OR_OP exp','exp',3,'p_exp_12','parser.py',139),
  ('exp -> exp AND_OP exp','exp',3,'p_exp_13','parser.py',143),
  ('exp -> exp MUL_ASSIGN exp','exp',3,'p_exp_14','parser.py',147),
  ('exp -> exp DIV_ASSIGN exp','exp',3,'p_exp_15','parser.py',151),
  ('exp -> exp MOD_ASSIGN exp','exp',3,'p_exp_16','parser.py',155),
  ('exp -> exp ADD_ASSIGN exp','exp',3,'p_exp_17','parser.py',159),
  ('exp -> exp SUB_ASSIGN exp','exp',3,'p_exp_18','parser.py',163),
  ('exp -> exp LEFT_ASSIGN exp','exp',3,'p_exp_19','parser.py',167),
  ('exp -> exp RIGHT_ASSIGN exp','exp',3,'p_exp_20','parser.py',171),
  ('exp -> exp AND_ASSIGN exp','exp',3,'p_exp_21','parser.py',175),
  ('exp -> exp XOR_ASSIGN exp','exp',3,'p_exp_22','parser.py',179),
  ('exp -> exp OR_ASSIGN exp','exp',3,'p_exp_23','parser.py',183),
  ('exp -> exp EQUALS exp','exp',3,'p_exp_24','parser.py',187),
  ('exp -> unary_expression','exp',1,'p_exp_25','parser.py',191),
  ('exp -> constant','exp',1,'p_exp_26','parser.py',195),
  ('exp -> VARIABLE','exp',1,'p_exp_27','parser.py',199),
  ('unary_expression -> VARIABLE unary_operator','unary_expression',2,'p_unary_expression_1','parser.py',203),
  ('unary_expression -> unary_operator VARIABLE','unary_expression',2,'p_unary_expression_2','parser.py',207),
  ('unary_operator -> INCREMENT','unary_operator',1,'p_unary_operator_1','parser.py',211),
  ('unary_operator -> DECREMENT','unary_operator',1,'p_unary_operator_2','parser.py',215),
  ('iterative_statement -> FOR LPAREN exp SEMI_COLON exp SEMI_COLON exp RPAREN statement','iterative_statement',9,'p_iterative_statement_1','parser.py',219),
  ('iterative_statement -> FOR LPAREN exp SEMI_COLON exp SEMI_COLON exp RPAREN LBRACE statements RBRACE','iterative_statement',11,'p_iterative_statement_2','parser.py',223),
  ('iterative_statement -> FOR LPAREN exp SEMI_COLON exp SEMI_COLON exp RPAREN SEMI_COLON','iterative_statement',9,'p_iterative_statement_3','parser.py',227),
  ('iterative_statement -> FOR LPAREN exp SEMI_COLON exp SEMI_COLON exp RPAREN LBRACE RBRACE','iterative_statement',10,'p_iterative_statement_4','parser.py',231),
  ('iterative_statement -> WHILE LPAREN exp RPAREN statement','iterative_statement',5,'p_iterative_statement_5','parser.py',235),
  ('iterative_statement -> WHILE LPAREN exp RPAREN SEMI_COLON','iterative_statement',5,'p_iterative_statement_6','parser.py',239),
  ('iterative_statement -> WHILE LPAREN exp RPAREN LBRACE statements RBRACE','iterative_statement',7,'p_iterative_statement_7','parser.py',243),
  ('iterative_statement -> WHILE LPAREN exp RPAREN LBRACE RBRACE','iterative_statement',6,'p_iterative_statement_8','parser.py',247),
  ('iterative_statement -> DO statement WHILE LPAREN exp RPAREN SEMI_COLON','iterative_statement',7,'p_iterative_statement_9','parser.py',251),
  ('iterative_statement -> DO LBRACE statements RBRACE WHILE LPAREN exp RPAREN SEMI_COLON','iterative_statement',9,'p_iterative_statement_10','parser.py',255),
  ('iterative_statement -> DO SEMI_COLON WHILE LPAREN exp RPAREN SEMI_COLON','iterative_statement',7,'p_iterative_statement_11','parser.py',259),
  ('iterative_statement -> DO LBRACE RBRACE WHILE LPAREN exp RPAREN SEMI_COLON','iterative_statement',8,'p_iterative_statement_12','parser.py',263),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',268),
]
