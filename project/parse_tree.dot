strict digraph graphname {

0 [label="program"]
1 [label=" statements2 "]; 
0 -> 1 ; 
2 [label=" statement4 "]; 
1 -> 2 ; 
3 [label=" function2 "]; 
2 -> 3 ; 
4 [label=" main_function7 "]; 
3 -> 4 ; 
5 [label=" VOID "]; 
4 -> 5 ; 
6 [label=" main "]; 
4 -> 6 ; 
7 [label=" ( "]; 
4 -> 7 ; 
8 [label=" ) "]; 
4 -> 8 ; 
9 [label=" { "]; 
4 -> 9 ; 
10 [label=" statements1 "]; 
4 -> 10 ; 
11 [label=" statements1 "]; 
10 -> 11 ; 
12 [label=" statements1 "]; 
11 -> 12 ; 
13 [label=" statements2 "]; 
12 -> 13 ; 
14 [label=" statement1 "]; 
13 -> 14 ; 
15 [label=" declaration1 "]; 
14 -> 15 ; 
16 [label=" type1 "]; 
15 -> 16 ; 
17 [label=" int "]; 
16 -> 17 ; 
18 [label=" enum_list4 "]; 
15 -> 18 ; 
19 [label=" i "]; 
18 -> 19 ; 
20 [label=" = "]; 
18 -> 20 ; 
21 [label=" exp27 "]; 
18 -> 21 ; 
22 [label=" constant4 "]; 
21 -> 22 ; 
23 [label=" 0 "]; 
22 -> 23 ; 
24 [label=" ; "]; 
15 -> 24 ; 
25 [label=" statement2 "]; 
12 -> 25 ; 
26 [label=" exp24 "]; 
25 -> 26 ; 
27 [label=" exp28 "]; 
26 -> 27 ; 
28 [label=" x "]; 
27 -> 28 ; 
29 [label=" = "]; 
26 -> 29 ; 
30 [label=" exp1 "]; 
26 -> 30 ; 
31 [label=" exp28 "]; 
30 -> 31 ; 
32 [label=" x "]; 
31 -> 32 ; 
33 [label=" + "]; 
30 -> 33 ; 
34 [label=" exp27 "]; 
30 -> 34 ; 
35 [label=" constant4 "]; 
34 -> 35 ; 
36 [label=" 1 "]; 
35 -> 36 ; 
37 [label=" ; "]; 
25 -> 37 ; 
38 [label=" statement6 "]; 
11 -> 38 ; 
39 [label=" conditional_statement2 "]; 
38 -> 39 ; 
40 [label=" if "]; 
39 -> 40 ; 
41 [label=" ( "]; 
39 -> 41 ; 
42 [label=" exp11 "]; 
39 -> 42 ; 
43 [label=" exp28 "]; 
42 -> 43 ; 
44 [label=" i "]; 
43 -> 44 ; 
45 [label=" == "]; 
42 -> 45 ; 
46 [label=" exp27 "]; 
42 -> 46 ; 
47 [label=" constant4 "]; 
46 -> 47 ; 
48 [label=" 1 "]; 
47 -> 48 ; 
49 [label=" ) "]; 
39 -> 49 ; 
50 [label=" { "]; 
39 -> 50 ; 
51 [label=" statements2 "]; 
39 -> 51 ; 
52 [label=" statement2 "]; 
51 -> 52 ; 
53 [label=" exp24 "]; 
52 -> 53 ; 
54 [label=" exp28 "]; 
53 -> 54 ; 
55 [label=" i "]; 
54 -> 55 ; 
56 [label=" = "]; 
53 -> 56 ; 
57 [label=" exp27 "]; 
53 -> 57 ; 
58 [label=" constant4 "]; 
57 -> 58 ; 
59 [label=" 1 "]; 
58 -> 59 ; 
60 [label=" ; "]; 
52 -> 60 ; 
61 [label=" } "]; 
39 -> 61 ; 
62 [label=" statement2 "]; 
10 -> 62 ; 
63 [label=" exp30 "]; 
62 -> 63 ; 
64 [label=" function_call1 "]; 
63 -> 64 ; 
65 [label=" y "]; 
64 -> 65 ; 
66 [label=" ( "]; 
64 -> 66 ; 
67 [label=" arguments1 "]; 
64 -> 67 ; 
68 [label=" arguments2 "]; 
67 -> 68 ; 
69 [label=" exp3 "]; 
68 -> 69 ; 
70 [label=" exp27 "]; 
69 -> 70 ; 
71 [label=" constant4 "]; 
70 -> 71 ; 
72 [label=" 2 "]; 
71 -> 72 ; 
73 [label=" * "]; 
69 -> 73 ; 
74 [label=" exp27 "]; 
69 -> 74 ; 
75 [label=" constant4 "]; 
74 -> 75 ; 
76 [label=" 3 "]; 
75 -> 76 ; 
77 [label=" , "]; 
67 -> 77 ; 
78 [label=" <__main__.Node object at 0x181fb90> "]; 
67 -> 78 ; 
79 [label=" ) "]; 
64 -> 79 ; 
80 [label=" ; "]; 
62 -> 80 ; 
81 [label=" } "]; 
4 -> 81 ; 


}